<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>폭간의 기술블로그</title>
    <link>https://sejoung.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>잘정리하자</description>
    <pubDate>Wed, 03 Jul 2024 05:59:56 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>COLMAP 설치</title>
      <link>https://sejoung.github.io/2024/07/2024-07-03-colmap/</link>
      <guid>https://sejoung.github.io/2024/07/2024-07-03-colmap/</guid>
      <pubDate>Wed, 03 Jul 2024 00:52:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;COLMAP-설치&quot;&gt;&lt;a href=&quot;#COLMAP-설치&quot; class=&quot;headerlink&quot; title=&quot;COLMAP 설치&quot;&gt;&lt;/a&gt;COLMAP 설치&lt;/h1&gt;&lt;p&gt;COLMAP은 그래픽 및 명령줄 인터페이스가 있는 범용 구조-모션(SfM) 
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="COLMAP-설치"><a href="#COLMAP-설치" class="headerlink" title="COLMAP 설치"></a>COLMAP 설치</h1><p>COLMAP은 그래픽 및 명령줄 인터페이스가 있는 범용 구조-모션(SfM) 및 멀티-뷰 스테레오(MVS) 파이프라인입니다.</p><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><p>최신 버전은 맥용으로 빌드를 해놓지 않았다 2021년 7월 3일 기준으로. 그래서 직접 빌드를 해야한다.</p><p>아래 종속성 설치</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">brew install \</span><br><span class="line">    cmake \</span><br><span class="line">    ninja \</span><br><span class="line">    boost \</span><br><span class="line">    eigen \</span><br><span class="line">    flann \</span><br><span class="line">    freeimage \</span><br><span class="line">    metis \</span><br><span class="line">    glog \</span><br><span class="line">    googletest \</span><br><span class="line">    ceres-solver \</span><br><span class="line">    qt5 \</span><br><span class="line">    glew \</span><br><span class="line">    cgal \</span><br><span class="line">    sqlite3</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/colmap/colmap.git</span><br><span class="line"><span class="built_in">cd</span> colmap</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/opt/homebrew/opt/qt@5/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..  -GNinja -DQt5_DIR=/usr/local/opt/qt/lib/cmake/Qt5</span><br><span class="line">ninja</span><br><span class="line">sudo ninja install</span><br></pre></td></tr></table></figure><h2 id="실행"><a href="#실행" class="headerlink" title="실행"></a>실행</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">colmap gui</span><br></pre></td></tr></table></figure><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://colmap.github.io/install.html">colmap install</a></li><li><a href="https://demuc.de/colmap/">COLMAP – SfM and MVS</a></li><li><a href="https://github.com/kmss1258/Colmap-setup">Colmap-setup</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/07/2024-07-03-colmap/#disqus_thread</comments>
    </item>
    
    <item>
      <title>3D Vision 2</title>
      <link>https://sejoung.github.io/2024/06/2024-06-21-3d_vision_2/</link>
      <guid>https://sejoung.github.io/2024/06/2024-06-21-3d_vision_2/</guid>
      <pubDate>Fri, 21 Jun 2024 02:44:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;3D-Vision&quot;&gt;&lt;a href=&quot;#3D-Vision&quot; class=&quot;headerlink&quot; title=&quot;3D Vision&quot;&gt;&lt;/a&gt;3D Vision&lt;/h1&gt;&lt;h2 id=&quot;Implicit-Function-NeRF&quot;&gt;&lt;a href=&quot;#Imp
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="3D-Vision"><a href="#3D-Vision" class="headerlink" title="3D Vision"></a>3D Vision</h1><h2 id="Implicit-Function-NeRF"><a href="#Implicit-Function-NeRF" class="headerlink" title="Implicit Function: NeRF"></a>Implicit Function: NeRF</h2><ul><li>NeRF<ul><li>2020 년에 나온 논문</li><li>인풋으로 카메라 포즈를 알고 있는 픽셀들의 레이드를 알고 있어 그걸로 렌더링하는 게 목표</li><li>데이터는 신에대한 이미지</li><li>colmap sfm pipeline을 사용해서 데이터를 만들었다</li></ul></li><li>Positional Encoding<ul><li>fourfeat</li></ul></li><li>Multiscale Representation<ul><li>mipnerf</li></ul></li><li>Learned Initializations<ul><li>learnit</li></ul></li><li>Relighting<ul><li>nerv</li></ul></li><li>giraffe</li></ul><h2 id="Open3D"><a href="#Open3D" class="headerlink" title="Open3D"></a>Open3D</h2><ul><li>3D Sensors: Depth Map</li><li>Structured Light</li><li>Depth Camera (Prime Sense &amp; Kinect)</li><li>Lidar Sensor</li><li>3D Scene Datasets <ul><li>RGBD dataset</li><li>ScanNet</li><li>KITTI</li><li>CityScape Dataset</li><li>Semantic KITTI</li><li>Waymo Open Dataset</li><li>KITTI 360 Dataset</li><li>Indoor Lidar Dataset</li><li>AI Habitat ‒ HM3D</li></ul></li><li>3D Object Datasets<ul><li>ShapeNet</li><li>ABC Dataset</li><li>ABO Dataset</li><li>Google Scanned Object</li></ul></li></ul><h2 id="COLMAP-SfM-MVS"><a href="#COLMAP-SfM-MVS" class="headerlink" title="COLMAP (SfM, MVS)"></a>COLMAP (SfM, MVS)</h2><ul><li>open 3d</li><li>COLMAP<ul><li>Structure-from-Motion (SfM) and Multi-View Stereo (MVS) pipeline</li><li>COLMAP SfM<ul><li>• COLMAP’s incremental Structure-from-Motion pipeline.</li></ul></li></ul></li></ul><h2 id="3D-reconstruction"><a href="#3D-reconstruction" class="headerlink" title="3D reconstruction"></a>3D reconstruction</h2><ul><li>Images -&gt; Points: Structure from Motion</li><li>Points -&gt; More points: Multiple View Stereo</li><li>Points -&gt; Meshes: Model Fitting</li><li>Meshes -&gt; Models: Texture Mapping</li></ul><h2 id="Human-Reconstruction"><a href="#Human-Reconstruction" class="headerlink" title="Human Reconstruction"></a>Human Reconstruction</h2><ul><li>3D Human Datasets<ul><li>Renderpeople</li><li>ANIMAR 4</li></ul></li></ul><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.matthewtancik.com/nerf">Representing Scenes as Neural Radiance Fields for View Synthesis</a></li><li><a href="https://github.com/bmild/nerf/blob/master/tiny_nerf.ipynb">tiny_nerf.ipynb</a></li><li><a href="https://github.com/bmild/nerf">nerf</a></li><li><a href="https://bmild.github.io/fourfeat/index.html">fourfeat</a></li><li><a href="https://jonbarron.info/mipnerf/">Mip-NeRF</a></li><li><a href="https://www.matthewtancik.com/learnit">Learned Initializations for Optimizing Coordinate-Based Neural Representations</a></li><li><a href="https://pratulsrinivasan.github.io/nerv/">NeRV</a></li><li><a href="https://m-niemeyer.github.io/project-pages/giraffe/index.html">GIRAFFE</a></li><li><a href="https://cs.nyu.edu/~silberman/datasets/nyu_depth_v2.html">NYU Depth Dataset V2</a></li><li><a href="https://github.com/isl-org/Open3D">Open3D</a></li><li><a href="https://colmap.github.io/tutorial.html">colmap</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/06/2024-06-21-3d_vision_2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CHAPTER 12 단위 테스트</title>
      <link>https://sejoung.github.io/2024/06/2024-06-21-Software_Engineering_at_Google_CHAPTER_12/</link>
      <guid>https://sejoung.github.io/2024/06/2024-06-21-Software_Engineering_at_Google_CHAPTER_12/</guid>
      <pubDate>Fri, 21 Jun 2024 00:52:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Part-III-프로세스&quot;&gt;&lt;a href=&quot;#Part-III-프로세스&quot; class=&quot;headerlink&quot; title=&quot;Part III 프로세스&quot;&gt;&lt;/a&gt;Part III 프로세스&lt;/h1&gt;&lt;h2 id=&quot;CHAPTER-12-단위-테스트&quot;&gt;&lt;a
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="Part-III-프로세스"><a href="#Part-III-프로세스" class="headerlink" title="Part III 프로세스"></a>Part III 프로세스</h1><h2 id="CHAPTER-12-단위-테스트"><a href="#CHAPTER-12-단위-테스트" class="headerlink" title="CHAPTER 12 단위 테스트"></a>CHAPTER 12 단위 테스트</h2><ul><li>작은 테스트는 빠르고 결정적이어서 개발자들이 수시로 수행하며 피드백을 즉각 얻을수 있다</li><li>단위 테스트는 대체로 대상 코드와 동시에 작성할 수 있을 만큼 작성하기 쉽다</li><li>빠르게 작성할 수 있으므로 테스트 커버리지를 높이기 좋다</li><li>시스템의 특정 부분에 집중하므로 실패 시 원인을 파악하기 쉽다</li><li>대상 시스템의 사용법과 의도한 동작 방식을 알려주는 문서자료 혹은 예제 코드 역활을 한다</li></ul><h3 id="유지보수하기-쉬워야-한다"><a href="#유지보수하기-쉬워야-한다" class="headerlink" title="유지보수하기 쉬워야 한다"></a>유지보수하기 쉬워야 한다</h3><ul><li>변경과 상관없는 변경 때문에 실패하는 깨지기 쉬운 테스트들이 도사리고 있다</li><li>무엇이 잘못되어 실패했는지 어떻게 고쳐야 하는지를 파악하기 어려운 불명확한 테스트들이다</li></ul><h3 id="깨지기-쉬운-테스트-예방하기"><a href="#깨지기-쉬운-테스트-예방하기" class="headerlink" title="깨지기 쉬운 테스트 예방하기"></a>깨지기 쉬운 테스트 예방하기</h3><p>깨지기 쉬운 테스트 란? : 실제로는 버그가 없으에도 심지어 검증 대상 코드와는 관련조차 없는 변경 때문에 실패하는 테스트를 말한다</p><ul><li>변하지 않는 테스트를 만들기 위해 노력하자<ul><li>순수 리팩터링</li><li>새로운 기능추가</li><li>버그 수정</li><li>행위 변경</li></ul></li><li>공개 API를 이용해 테스트하자</li><li>상호작용이 아닌 상태를 테스트하자</li></ul><h3 id="명확한-테스트-작성하기"><a href="#명확한-테스트-작성하기" class="headerlink" title="명확한 테스트 작성하기"></a>명확한 테스트 작성하기</h3><p>명확한 테스트라 함은 존재 이유와 실패 원인을 엔지니어가 곧바로 알아차릴 수 있는 테스트를 말한다</p><ul><li>완전하고 간결하게 만들자<ul><li>완전한 테스트 : 결과에 도달하기까지의 논리를 읽는 이가 이해하는 데 필요한 모든 정보를 본문에 담고 있는 테스트</li><li>간결한 테스트 : 관련 없는 정보는 포함하지 않는 테스트</li></ul></li><li>메서드가 아니라 행위를 테스트하자<ul><li>테스트의 구조는 행위가 부각되도록 구성</li><li>테스트 이름은 검사하는 행위에 어울리게 짓자</li></ul></li><li>테스트에 논리를 넣지 말자</li><li>실패 메시지를 명확하게 작성하자</li></ul><h3 id="테스트와-코드-공유-DRY가-아니라-DAMP"><a href="#테스트와-코드-공유-DRY가-아니라-DAMP" class="headerlink" title="테스트와 코드 공유: DRY가 아니라 DAMP!"></a>테스트와 코드 공유: DRY가 아니라 DAMP!</h3><p>대부분의 소프트웨어는 반복하지 말라는 DRY(Don’t Repeat Yourself) 원칙을 따른다</p><p>DAMP(descriptive and meaningful phrases) : 서술적이고 의미 있는 문구</p><p>DAMP가 DRY를 대체하지 않는다 보완 해주는 개념이다</p><ul><li>공유 값</li><li>공유 셋업</li><li>공유 도우미 메서드와 공유 검증 메서드</li><li>테스트 인프라 정의하기</li></ul><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.yes24.com/Product/Goods/109182479">구글 엔지니어는 이렇게 일한다</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/06/2024-06-21-Software_Engineering_at_Google_CHAPTER_12/#disqus_thread</comments>
    </item>
    
    <item>
      <title>3D Vision 1</title>
      <link>https://sejoung.github.io/2024/06/2024-06-17-3d_vision_1/</link>
      <guid>https://sejoung.github.io/2024/06/2024-06-17-3d_vision_1/</guid>
      <pubDate>Mon, 17 Jun 2024 05:29:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;3D-Vision&quot;&gt;&lt;a href=&quot;#3D-Vision&quot; class=&quot;headerlink&quot; title=&quot;3D Vision&quot;&gt;&lt;/a&gt;3D Vision&lt;/h1&gt;&lt;p&gt;3차원 데이터는 x,y,z 같은 좌표를 갖는다&lt;/p&gt;
&lt;h2 id=&quot;3D-R
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="3D-Vision"><a href="#3D-Vision" class="headerlink" title="3D Vision"></a>3D Vision</h1><p>3차원 데이터는 x,y,z 같은 좌표를 갖는다</p><h2 id="3D-Representations-Point-Cloud-Voxel-Mesh"><a href="#3D-Representations-Point-Cloud-Voxel-Mesh" class="headerlink" title="3D Representations: Point Cloud, Voxel, Mesh"></a>3D Representations: Point Cloud, Voxel, Mesh</h2><p>컴퓨터를 통해서 3D 데이터를 어떻게 만들어야 되나</p><p>시멘틱 vs 신텍스</p><p>Raw data</p><ul><li>Point cloud<ul><li>Unstructured</li></ul></li><li>Range image <ul><li>텝스이미지의 스캔한 이미지</li></ul></li><li>Polygon soup<ul><li>폴리곤</li></ul></li></ul><p>Surfaces</p><ul><li>Mesh<ul><li>폴리곤 삼각형으로 되어 있는것</li><li>꼭 이어져있지 않다</li></ul></li><li>Subdivision<ul><li>점점 더 작은 폴리곤으로 나누어지는것</li></ul></li><li>Parametric</li><li>Implicit</li></ul><p>Solids</p><ul><li>Voxels</li><li>BSP tree<ul><li>바이너리 트리</li></ul></li><li>CSG</li><li>Sweep</li></ul><p>High-level structures</p><ul><li>Scene graph<ul><li>리프노드의 모음</li></ul></li><li>Skeleton</li><li>Application specific</li></ul><h2 id="Point-Cloud-Classification"><a href="#Point-Cloud-Classification" class="headerlink" title="Point Cloud Classification"></a>Point Cloud Classification</h2><ul><li>point net <ul><li>Multi-Layer Perceptron (MLP)</li></ul></li><li>PointNet++<ul><li>포인트넷은 로컬 스트럭처를 캡쳐하지 못한 문제</li></ul></li><li>point transformer<ul><li>포인트넷의 문제를 해결하기 위해 제안된 모델</li><li>트렌스포머 구조를 3d에도 잘 활용한다</li></ul></li></ul><h2 id="Point-Cloud-Registration"><a href="#Point-Cloud-Registration" class="headerlink" title="Point Cloud Registration"></a>Point Cloud Registration</h2><ul><li>3D surface registration<ul><li>Gauss Newton algorithm</li><li>chain rule</li></ul></li><li>point set registration<ul><li>sparse convolution<ul><li>특정 위치에서만 컨블러션을 수행함</li></ul></li><li>u-shape network</li></ul></li></ul><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/06/2024-06-17-3d_vision_1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CHAPTER 11 테스트 개요</title>
      <link>https://sejoung.github.io/2024/06/2024-06-17-Software_Engineering_at_Google_CHAPTER_11/</link>
      <guid>https://sejoung.github.io/2024/06/2024-06-17-Software_Engineering_at_Google_CHAPTER_11/</guid>
      <pubDate>Mon, 17 Jun 2024 02:53:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Part-III-프로세스&quot;&gt;&lt;a href=&quot;#Part-III-프로세스&quot; class=&quot;headerlink&quot; title=&quot;Part III 프로세스&quot;&gt;&lt;/a&gt;Part III 프로세스&lt;/h1&gt;&lt;h2 id=&quot;CHAPTER-11-테스트-개요&quot;&gt;&lt;a
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="Part-III-프로세스"><a href="#Part-III-프로세스" class="headerlink" title="Part III 프로세스"></a>Part III 프로세스</h1><h2 id="CHAPTER-11-테스트-개요"><a href="#CHAPTER-11-테스트-개요" class="headerlink" title="CHAPTER 11 테스트 개요"></a>CHAPTER 11 테스트 개요</h2><p>테스트는 처음부터 프로그래밍과 함께다</p><p>소프트웨어와 시스템 복잡도에 대응하기 위해 테스트 방식을 극적으로 진화<br>그 진화의 중심에는 개발자가 주도하는 테스트와 자동 테스트가 있다</p><p>자동 테스트는 버그가 몰래 숨어들어 고객을 놀라게 하는 사태를 막아준다</p><p>테스트 체계가 잘 갖춰져 있다면 변화를 두려워할 이유가 없다</p><p>시스템을 더 많이 더 빠르게 변경하고 싶다면 더 빠르게 테스트 하는 방법을 모색해야 한다</p><p>테스트를 작성하는 행위가 시스템 설계에도 영향을 준다</p><h3 id="테스트를-작성하는-이유"><a href="#테스트를-작성하는-이유" class="headerlink" title="테스트를 작성하는 이유"></a>테스트를 작성하는 이유</h3><ul><li>테스트 하려는 단하나의 행위</li><li>특정한 입력</li><li>관측 가능한 출력 혹은 동작</li><li>통제된 조건</li></ul><p>테스트는 엔지니어에게 신뢰를 줄때만 가치가 있다.</p><p>최고의 팀은 팀원들의 집단 지성을 팀 전체의 이익으로 환원하는 방법을 찾아내야 된다</p><p>테스트 코드가 주는 혜택</p><ul><li>디버깅 감소</li><li>자신 있게 변경</li><li>더 나은 문서자료</li><li>더 단순한 리뷰</li><li>사려 깊은 설계</li><li>고품질의 릴리스를 빠르게</li></ul><h3 id="테스트-스위트-설계하기"><a href="#테스트-스위트-설계하기" class="headerlink" title="테스트 스위트 설계하기"></a>테스트 스위트 설계하기</h3><ul><li>테스트의 크기<ul><li>작은 테스트<ul><li>제약이 가장심하다</li></ul></li><li>중간 크기의 테스트<ul><li>단 한 대의 기기에서 수행</li></ul></li><li>큰 테스트<ul><li>여러 대의 기기를 활용</li></ul></li><li>테스트 크기와 무관한 공통 습성<ul><li>테스트는 독립적이어야 한다(밀폐 되어야 한다)</li></ul></li></ul></li><li>테스트 범위<ul><li>좁은 범위 테스트</li><li>중간 범위 테스트</li><li>넓은 범위 테스트</li><li>안티 패턴<ul><li>아이스크림 콘<ul><li>종단간 테스트를 많이 작성하고 통합테스트나 단위 테스트는</li></ul></li><li>모레시계<ul><li>종단간 테스트와 단위테스트는 많지만 통합테스트가 적다</li></ul></li></ul></li><li>비욘세 규칙<ul><li>네가 좋아했다면 테스트를 준비했어야지</li></ul></li><li>코드 커버리지</li></ul></li></ul><h3 id="구글-규모의-테스트"><a href="#구글-규모의-테스트" class="headerlink" title="구글 규모의 테스트"></a>구글 규모의 테스트</h3><p>구글은 모든 코드를 모노리포로 관리</p><p>리포지토리 브랜치를 사용하는 팀은 거의 없다</p><p>테스트 비용을 낮추는데 투자하지 않으면 종국에는 엔지니어들이 테스트가 전혀 가치가 없다고 결론 낼 것이다</p><h3 id="구글의-테스트-역사"><a href="#구글의-테스트-역사" class="headerlink" title="구글의 테스트 역사"></a>구글의 테스트 역사</h3><ul><li>오리엔테이션 수업</li><li>테스트 인증</li><li>화장실에서도 테스트<ul><li>화장실 변기 않에 붙히기</li></ul></li><li>오늘날의 테스트 문화<ul><li>테스트를 강제시키면 테스트가 뿌리내리는데 오래 걸렸을것다</li><li>테스트가 훌륭한 아이디어인것을 검증하는데 집중함<h3 id="자동-테스트의-한계"><a href="#자동-테스트의-한계" class="headerlink" title="자동 테스트의 한계"></a>자동 테스트의 한계</h3>탐색적 테스팅</li></ul></li></ul><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.yes24.com/Product/Goods/109182479">구글 엔지니어는 이렇게 일한다</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/06/2024-06-17-Software_Engineering_at_Google_CHAPTER_11/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CHAPTER 10 문서자료</title>
      <link>https://sejoung.github.io/2024/06/2024-06-14-Software_Engineering_at_Google_CHAPTER_10/</link>
      <guid>https://sejoung.github.io/2024/06/2024-06-14-Software_Engineering_at_Google_CHAPTER_10/</guid>
      <pubDate>Fri, 14 Jun 2024 07:20:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Part-III-프로세스&quot;&gt;&lt;a href=&quot;#Part-III-프로세스&quot; class=&quot;headerlink&quot; title=&quot;Part III 프로세스&quot;&gt;&lt;/a&gt;Part III 프로세스&lt;/h1&gt;&lt;h2 id=&quot;CHAPTER-10-문서자료&quot;&gt;&lt;a h
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="Part-III-프로세스"><a href="#Part-III-프로세스" class="headerlink" title="Part III 프로세스"></a>Part III 프로세스</h1><h2 id="CHAPTER-10-문서자료"><a href="#CHAPTER-10-문서자료" class="headerlink" title="CHAPTER 10 문서자료"></a>CHAPTER 10 문서자료</h2><p>대부분의 엔지니어가 코드를 작성하고 이용하고 유지보수 하면서 대표적인 불만이 양질의 문서자료가 부족하다는 점</p><p>구글에서 문서 자료를 개선하고자 해본 시도 중 가장 성공적이었던 방법은 문서자료를 코드처럼 취급하여 엔지니어링 워크플로에 통합하는 것</p><h3 id="문서자료란"><a href="#문서자료란" class="headerlink" title="문서자료란?"></a>문서자료란?</h3><p>엔지니어가 작업을 끝마치기 위해 작성해야 하는 모든 부수적인 테스트를 의미</p><h3 id="문서자료가-필요한-이유"><a href="#문서자료가-필요한-이유" class="headerlink" title="문서자료가 필요한 이유"></a>문서자료가 필요한 이유</h3><p>양질의 문서 자료는 엔지니어링 조직에 커다란 축복<br>코드와 API를 이해하기 쉬워지고 실수가 줄어든다</p><p>프로젝트팀은 자신들의 설계 목표와 팀의 목표가 활자로 명확하게 적혀있을 때 역량을 더 집중하게 됩니다.</p><p>수동으로 해야 되는 일은 절차가 잘 기술되어 있어야 쉬워진다.</p><p>문서자료가 중요한데 덜중요하다고 생각되는 이유가 무엇인가?</p><ul><li>해택이 즉각적으로 돌어오지 않는다</li><li>글쓰르길 프로그래밍과는 별개의 기술로 본다</li><li>글쓰기에 자신 없어하는 엔지니어도 많다</li><li>문서자료는 도구 지원이나 개발 워크플로 통합 측면에서 아직 많이 부족하기 때문에 작성하기가 상대적으로 더 어렵다</li><li>문서자료가 기존 코드를 유지 보수하기 더 쉽게 해준다고 생각하기보다는 유지보수할 대상이 하나 더 늘어난다고 생각한다</li></ul><p>문서자료는 다양한 부류에 사람에게 혜택을 준다</p><p>작성자에도 혜택을 받는다</p><ul><li>API를 가다듭는데 도움을 준다</li><li>유지보수를 위한 로드맵과 과거 이력을 제공한다</li><li>코드를 더 전문적이고 매력있게 보이게 한다</li></ul><p>읽는이에게 최적화 하라</p><h3 id="문서자료는-코드와-같다"><a href="#문서자료는-코드와-같다" class="headerlink" title="문서자료는 코드와 같다"></a>문서자료는 코드와 같다</h3><ul><li>꼭 따라야 하는 내부 정책과 규칙이 있어야 한다</li><li>버전 관리 시스템에 등록해 관리해야 한다</li><li>관리 책임자를 명시해야 한다</li><li>변경시 리뷰를 거쳐야 한다</li><li>주기적으로 평가를 받아야 한다</li><li>가능하면 정확성이나 최신 정보 반영 여부등을 측정해야 한다</li></ul><h3 id="독자를-알라"><a href="#독자를-알라" class="headerlink" title="독자를 알라"></a>독자를 알라</h3><p>문서자료를 작성하면 법하는 가장 중요한 실수는 자신만을 위해 쓴다는것</p><p>독자 유형</p><ul><li>도메인 지식을 독자의 눈높이에 맞는 기술 수준으로 써야한다<ul><li>경험 수준 : 전문 프로그래머, 초보 엔지니어</li><li>도메인 지식 : 팀원, 혹은 다른 사내직원</li><li>목적 : 최종사용자, 소프트웨어 전문가</li></ul></li><li>탐색자 : 자신이 원하는것을 명확히 알고 있는 사람</li><li>배외자 : 무엇을 원하는지 정확하게 알지 못하는 사람</li></ul><h3 id="문서자료-유형"><a href="#문서자료-유형" class="headerlink" title="문서자료 유형"></a>문서자료 유형</h3><ul><li>참조용 문서자료<ul><li>파일 주석</li><li>클래스 주석</li><li>함수주석</li></ul></li><li>설계 문서</li><li>튜토리얼</li><li>개념 설명 문서</li><li>랜딩 페이지<h3 id="문서자료-리뷰"><a href="#문서자료-리뷰" class="headerlink" title="문서자료 리뷰"></a>문서자료 리뷰</h3></li><li>정확성 확인용 기술 리뷰</li><li>명확성 확인용 기술 리뷰</li><li>일관성 확인용 기술 리뷰</li></ul><h3 id="문서화-철학"><a href="#문서화-철학" class="headerlink" title="문서화 철학"></a>문서화 철학</h3><ul><li>누가 무엇을 어떻게 어디서 왜<ul><li>누갸 : 독자</li><li>무엇 : 문서의 목적</li><li>언제 : 생성되고 리뷰되고 갱신된 날짜</li><li>어디에 : 문서가 존재해야할 장소</li><li>왜 : 문서의 목적</li></ul></li><li>시작 중간 끝</li><li>좋은 문서자료의 특징<ul><li>완전성</li><li>정확성</li><li>명확성</li></ul></li><li>문서 폐기하기</li></ul><h3 id="테크니컬-라이터가-필요한-순간"><a href="#테크니컬-라이터가-필요한-순간" class="headerlink" title="테크니컬 라이터가 필요한 순간"></a>테크니컬 라이터가 필요한 순간</h3><p>팀원 외 독자를 위한 문서를 만들때 필요하다</p><h3 id="마치며"><a href="#마치며" class="headerlink" title="마치며"></a>마치며</h3><p>내가 곧 문제이자 해결책임</p><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.yes24.com/Product/Goods/109182479">구글 엔지니어는 이렇게 일한다</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/06/2024-06-14-Software_Engineering_at_Google_CHAPTER_10/#disqus_thread</comments>
    </item>
    
    <item>
      <title>3부 문을 열다 / 어떻게 통찰을 촉진할 수 있는가</title>
      <link>https://sejoung.github.io/2024/06/2024-06-11-Seeing_What_Others_Dont_CHAPTER_3/</link>
      <guid>https://sejoung.github.io/2024/06/2024-06-11-Seeing_What_Others_Dont_CHAPTER_3/</guid>
      <pubDate>Tue, 11 Jun 2024 13:45:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;3부-문을-열다-x2F-어떻게-통찰을-촉진할-수-있는가&quot;&gt;&lt;a href=&quot;#3부-문을-열다-x2F-어떻게-통찰을-촉진할-수-있는가&quot; class=&quot;headerlink&quot; title=&quot;3부 문을 열다 &amp;#x2F; 어떻게 통찰을 촉진할 수 있는
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="3부-문을-열다-x2F-어떻게-통찰을-촉진할-수-있는가"><a href="#3부-문을-열다-x2F-어떻게-통찰을-촉진할-수-있는가" class="headerlink" title="3부 문을 열다 &#x2F; 어떻게 통찰을 촉진할 수 있는가"></a>3부 문을 열다 &#x2F; 어떻게 통찰을 촉진할 수 있는가</h1><p>통찰의 경로</p><ul><li>모순 경로</li><li>연결 경로</li><li>창의적 절망 경로</li></ul><h2 id="14장-우리-자신을-돕기"><a href="#14장-우리-자신을-돕기" class="headerlink" title="14장 우리 자신을 돕기"></a>14장 우리 자신을 돕기</h2><p>모순의 힘을 더 잘 사용하는 것</p><p>연결 경로는 많은 아이디어들을 빙빙 돌게 만들며 우연한 링크를 만드는데 뛰어나다<br>소용돌이와 난류가 많을수록 발견의 확률은 더 높아진다<br>아이디어 밀도를 높이고 창의적인 사람들과의 접촉을 늘리는 방법들을 찾아야 한다<br>거꾸로 사고하기의 오류에 부딪힐수도 있다</p><p>창의적 절망의 경로는 다른 태도를 요구한다</p><ul><li>비판적 사고</li></ul><p>번뜩임의 순간을 촉진하기 위한 배양은?</p><ul><li>회복을 위한 휴식</li></ul><h2 id="15장-다른-사람-돕기"><a href="#15장-다른-사람-돕기" class="headerlink" title="15장 다른 사람 돕기"></a>15장 다른 사람 돕기</h2><p>그들의 결함 있는 믿음을 바로잡는것</p><ul><li>진단</li><li>진단 더하기 행동</li><li>결함 있는 믿음을 고치기 위한 모순 사용</li><li>헛발질 하기</li></ul><h2 id="16장-우리-조직-돕기"><a href="#16장-우리-조직-돕기" class="headerlink" title="16장 우리 조직 돕기"></a>16장 우리 조직 돕기</h2><p>성과 공식의 아랫쪽 화살의 독재를 깬다</p><ul><li>위쪽 화살표 강화하기</li><li>필터 느슨하게 만들기 </li><li>조직의 의지력 늘리기<ul><li>행동으로 옮기는 의지력 부족</li><li>개인의 수준이 아닌 조직 수준에서의 자기 통찰이 필요</li></ul></li><li>권위에 호소하기<ul><li>조직의 리더들이 문화를 바꾸도록 시도하는것</li></ul></li></ul><h2 id="17장-통찰-사냥꾼이-되기-위한-팁"><a href="#17장-통찰-사냥꾼이-되기-위한-팁" class="headerlink" title="17장 통찰 사냥꾼이 되기 위한 팁"></a>17장 통찰 사냥꾼이 되기 위한 팁</h2><p>최고의 상황은 통찰이 일어나는 것을 지켜본 후에 더 많은 세부사항을 찾는 것</p><h2 id="18장-통찰의-마술"><a href="#18장-통찰의-마술" class="headerlink" title="18장 통찰의 마술"></a>18장 통찰의 마술</h2><p>통찰의 마술은 다음 힘에서 나온다 연결, 우연의 일치, 호기심을 알아채려는 힘, 모순을 감지하려는 힘. 이 마술은 우리 속에 살고 있다. 쉬지 않고 마음을 뒤흔들면서.</p><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://m.yes24.com/Goods/Detail/15850970">통찰, 평범에서 비범으로</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/06/2024-06-11-Seeing_What_Others_Dont_CHAPTER_3/#disqus_thread</comments>
    </item>
    
    <item>
      <title>2부 문을 닫다 / 무엇이 통찰을 방해하는가</title>
      <link>https://sejoung.github.io/2024/06/2024-06-11-Seeing_What_Others_Dont_CHAPTER_2/</link>
      <guid>https://sejoung.github.io/2024/06/2024-06-11-Seeing_What_Others_Dont_CHAPTER_2/</guid>
      <pubDate>Tue, 11 Jun 2024 13:14:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;2부-문을-닫다-x2F-무엇이-통찰을-방해하는가&quot;&gt;&lt;a href=&quot;#2부-문을-닫다-x2F-무엇이-통찰을-방해하는가&quot; class=&quot;headerlink&quot; title=&quot;2부 문을 닫다 &amp;#x2F; 무엇이 통찰을 방해하는가&quot;&gt;&lt;/a&gt;2부 문을
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="2부-문을-닫다-x2F-무엇이-통찰을-방해하는가"><a href="#2부-문을-닫다-x2F-무엇이-통찰을-방해하는가" class="headerlink" title="2부 문을 닫다 &#x2F; 무엇이 통찰을 방해하는가"></a>2부 문을 닫다 &#x2F; 무엇이 통찰을 방해하는가</h1><h2 id="9장-어리석음"><a href="#9장-어리석음" class="headerlink" title="9장 어리석음"></a>9장 어리석음</h2><p>동일한 상황 동일한 정보가 있어도 어리석으면 통찰을 얻지 못한다.</p><p>그 생각을 못했다니 얼마나 멍청한가 - 헉슬리</p><h2 id="10장-대조적-쌍둥이-연구"><a href="#10장-대조적-쌍둥이-연구" class="headerlink" title="10장 대조적 쌍둥이 연구"></a>10장 대조적 쌍둥이 연구</h2><p>통찰을 얻지 못함</p><ul><li>결함이 있는 믿음에 빠짐</li><li>경험 부족</li><li>수동적 자세</li><li>구체적 추론 방식<ul><li>통찰에 개방적이도록 놓아 두지 않는다.</li></ul></li></ul><p>통찰을 얻음</p><ul><li>결함 있는 믿음에서 탈피함</li><li>경험 있음</li><li>적극적 자세</li><li>장난스러운 추촌 방식</li></ul><p>지식 방패 - 자신의 애초 진단이 틀렸음에도 거기에 계속 매달림</p><h2 id="11장-멍청해지는-설계"><a href="#11장-멍청해지는-설계" class="headerlink" title="11장 멍청해지는 설계"></a>11장 멍청해지는 설계</h2><p>컴퓨터 기반의 보조도구를 설계 할때 지침</p><ul><li>시스템은 사용자가 일을 더 잘하도록 도와야 한다<ul><li>일 개념을 고정시키고 통찰의 기회를 감소시킨다</li></ul></li><li>시스템은 중대한 신호를 사용자에게 분명히 보여 줘야 한다<ul><li>데이터 베이스 구조는 통찰을 얻는 데 방해가 될수 있다</li></ul></li><li>시스템은 사용자가 의미 없는 메시지 속에서 허우적 되지 않아야한다<ul><li>시스템이 새로운 중대신호를 모호하게 만들어버릴수도 있다.</li></ul></li><li>시스템은 사용자가 목표 대비 어느 정도의 진전이 있는지 모니터링 할 수 있도록 도와야 한다.<ul><li>작업을 어떻게 재구조화할지 통찰이 생겼을 때 진척도에 대한 모니터링이 우리를 방해 할 수 있다</li></ul></li></ul><p>더 강한 설계 &#x3D; 더 약한 통찰</p><h2 id="12장-조직은-어떻게-통찰을-가로막는가"><a href="#12장-조직은-어떻게-통찰을-가로막는가" class="headerlink" title="12장 조직은 어떻게 통찰을 가로막는가"></a>12장 조직은 어떻게 통찰을 가로막는가</h2><p>뜻밖의 실수가 계획과 매끄러운 운영을 엉망으로 만들수 있다</p><p>불확실성을 줄이고 실수를 최소화하겠다는 집착으로 조직들은 예측 가능성의 함정과 완벽성의 함정에 빠지게 된다</p><p>통찰은 예측 가능한 것의 반대이다</p><p>통찰은 파괴적이다</p><p>통찰은 경고없이 찾아오며 예기치 못한 형태를 띠고 상상도 못한 기회의 문을 연다</p><p>완벽성의 실수의 부재</p><p>조직이 통찰을 가로막는 방식</p><ul><li>아래쪽 화살표 시행하기</li><li>조직적 억압</li></ul><p>실수와 불확실성을 줄이는 법</p><ul><li>더욱 까다로운 기준을 부과한다</li><li>단속을 강화한다</li><li>모든 출처를 문서화 한다</li><li>가정을 뽑아낸다</li><li>이 가정들에 붕확실성 정도를 추정한다</li><li>검토 숫자를 늘린다</li><li>더 높은 엄밀성으로 결론의 정당성을 주장하게 된다</li><li>체크리스트와 절차에 의존한다</li><li>일정의 정밀도를 높여 더욱 세세하게 계획한다</li></ul><h2 id="13장-이렇게-통찰을-사냥하지-말라"><a href="#13장-이렇게-통찰을-사냥하지-말라" class="headerlink" title="13장 이렇게 통찰을 사냥하지 말라"></a>13장 이렇게 통찰을 사냥하지 말라</h2><p>패러다임이 교착상태에 빠졌을때</p><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://m.yes24.com/Goods/Detail/15850970">통찰, 평범에서 비범으로</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/06/2024-06-11-Seeing_What_Others_Dont_CHAPTER_2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>1부 통찰의 문으로 들어가다 / 통찰은 어떻게 촉발되는가</title>
      <link>https://sejoung.github.io/2024/06/2024-06-10-Seeing_What_Others_Dont_CHAPTER_1/</link>
      <guid>https://sejoung.github.io/2024/06/2024-06-10-Seeing_What_Others_Dont_CHAPTER_1/</guid>
      <pubDate>Mon, 10 Jun 2024 13:28:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;1부-통찰의-문으로-들어가다-x2F-통찰은-어떻게-촉발되는가&quot;&gt;&lt;a href=&quot;#1부-통찰의-문으로-들어가다-x2F-통찰은-어떻게-촉발되는가&quot; class=&quot;headerlink&quot; title=&quot;1부 통찰의 문으로 들어가다 &amp;#x2F; 통찰은
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="1부-통찰의-문으로-들어가다-x2F-통찰은-어떻게-촉발되는가"><a href="#1부-통찰의-문으로-들어가다-x2F-통찰은-어떻게-촉발되는가" class="headerlink" title="1부 통찰의 문으로 들어가다 &#x2F; 통찰은 어떻게 촉발되는가"></a>1부 통찰의 문으로 들어가다 &#x2F; 통찰은 어떻게 촉발되는가</h1><p>성과 개선 &#x3D; 실수를 줄이고 + 통찰을 올리는것</p><p>하지만 실수를 모두 제거해 버리면 통찰을 얻기 힘들다</p><h2 id="1장-통찰-사냥하기"><a href="#1장-통찰-사냥하기" class="headerlink" title="1장 통찰 사냥하기"></a>1장 통찰 사냥하기</h2><p>다양한 방법으로 통찰을 얻어낸다</p><h2 id="2장-번뜩임의-순간"><a href="#2장-번뜩임의-순간" class="headerlink" title="2장 번뜩임의 순간"></a>2장 번뜩임의 순간</h2><p>준비 -&gt; 배양 -&gt; 조명 -&gt; 확인</p><p>삶의 통찰을 따라다니는<br>내 매일의 아름다움이여 선율을 바꾸고<br>내 미지의 정신을 따라 길을 내네</p><p>전문성과 준비를 혼동할수도 있다.</p><p>사전에 관심사와 경험들 덕분에 다른 사람이 놓쳤던 통찰을 잡아챌 준비가 되어 있었다.</p><p>의도적 준비가 필요하다</p><p>준비는 직업윤리<br>배양은 놀이윤리에 잘 들어맞는다<br>조명단계는 무의식 속의 연상들이 이어진 결과</p><p>통찰은 되돌릴수 없다 그전에 내가 있던 지점으로 돌아갈 수 없게 된다</p><h2 id="3장-연결"><a href="#3장-연결" class="headerlink" title="3장 연결"></a>3장 연결</h2><p>점 연결하기 경험 과 더 많은 아이디어에 노출되어 문제를 해결하는 경험</p><p>오랜기간 경각심을 유지하는 것은 어려운 일<br>일상적으로 일어나는 위기 상황들은 지속적으로 산만함을 유발</p><h2 id="4장-우연의-일치와-호기심"><a href="#4장-우연의-일치와-호기심" class="headerlink" title="4장 우연의 일치와 호기심"></a>4장 우연의 일치와 호기심</h2><p>우연의 일치란 일반적으로 무시해야 할 운에 의해 일어나는 사건이지만 무시해선 안되는 경우가 있다.<br>이는 때때로 새로운 패턴에 대해 우리에게 경고를 하기도 한다.</p><p>추세를 알아채고, 패턴을 찾아내며, 불규칙성을 궁금해하며, 우연의 일치를 감지하는 사람들이야 말로 중요한 자산이다.</p><p>버넬도 펄서를 발견한 것은 우연의 일치였다.</p><h2 id="5장-모순"><a href="#5장-모순" class="headerlink" title="5장 모순"></a>5장 모순</h2><p>모순으로부터 비롯된 통찰은 그럴리 없어! 라는 감정적 반응에 불꽃을 일으킨다<br>회의적 사고</p><p>토마스 쿤 - 과학혁명의 구조</p><p>정상 과학은 모순을 짓눌러버린다 -&gt; 시간이 지나면서 이러한 불일치는 점점 커지다가 위기를 만난다 -&gt; 패러다임 시프트</p><p>아인슈타인은 일정한것을 바꿔서 패러독스를 해결함</p><h2 id="6장-창의적-절망"><a href="#6장-창의적-절망" class="headerlink" title="6장 창의적 절망"></a>6장 창의적 절망</h2><p>어떠한 통찰은 우발적이다. 계획되지 않은 우연의 결과 혹은 딱 적절한 시기와 적절한 장소에 있었다는 결과로 탄생</p><p>창의적 절망 -&gt; 시간은 자꾸흘러가고 그럴듯한 말의 이동도 소용없고, 그 어떠한 방법도 통하지 않는 절망적인 상황</p><h2 id="7장-통찰을-바라보는-다른-방법들"><a href="#7장-통찰을-바라보는-다른-방법들" class="headerlink" title="7장 통찰을 바라보는 다른 방법들"></a>7장 통찰을 바라보는 다른 방법들</h2><p>데이터를 보자 아이디어를 죽이게 되었다</p><p>통찰은 순간에도 오지만 점진적으로도 올 수 있다.</p><p>점진적 통찰</p><h2 id="8장-발견의-논리"><a href="#8장-발견의-논리" class="headerlink" title="8장 발견의 논리"></a>8장 발견의 논리</h2><p>퉁찰로 가는 모순의 경로</p><ul><li>모순 경로 </li><li>연결 경로</li><li>창의적 절망 경로</li></ul><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://m.yes24.com/Goods/Detail/15850970">통찰, 평범에서 비범으로</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/06/2024-06-10-Seeing_What_Others_Dont_CHAPTER_1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CHAPTER 9 코드 리뷰</title>
      <link>https://sejoung.github.io/2024/06/2024-06-10-Software_Engineering_at_Google_CHAPTER_9/</link>
      <guid>https://sejoung.github.io/2024/06/2024-06-10-Software_Engineering_at_Google_CHAPTER_9/</guid>
      <pubDate>Mon, 10 Jun 2024 00:47:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Part-III-프로세스&quot;&gt;&lt;a href=&quot;#Part-III-프로세스&quot; class=&quot;headerlink&quot; title=&quot;Part III 프로세스&quot;&gt;&lt;/a&gt;Part III 프로세스&lt;/h1&gt;&lt;h2 id=&quot;CHAPTER-9-코드-리뷰&quot;&gt;&lt;a h
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="Part-III-프로세스"><a href="#Part-III-프로세스" class="headerlink" title="Part III 프로세스"></a>Part III 프로세스</h1><h2 id="CHAPTER-9-코드-리뷰"><a href="#CHAPTER-9-코드-리뷰" class="headerlink" title="CHAPTER 9 코드 리뷰"></a>CHAPTER 9 코드 리뷰</h2><p>코드 리뷰는 작성자 이외에 사람이 코드를 검토하는 프로세스로 주로 코드를 코드베이스에 반영하기 전에 수행한다</p><p>코드리뷰는 버그가 코드베이스로 침투하기 전에 잡아 낸다.</p><h3 id="코드-리뷰-흐름"><a href="#코드-리뷰-흐름" class="headerlink" title="코드 리뷰 흐름"></a>코드 리뷰 흐름</h3><p>변경을 코드에 커밋하기 전에 리뷰 하는데 이 단계를 프리커밋 리뷰라고 한다</p><h3 id="코드-리뷰-구글"><a href="#코드-리뷰-구글" class="headerlink" title="코드 리뷰 @ 구글"></a>코드 리뷰 @ 구글</h3><p>구글에서 어떤 변경이든 승인을 얻으려면 세 가지 측면 리뷰를 통과해야 한다</p><ul><li>다른 엔지니어로부터 정확성과 이해 용이성을 평가 받는다</li><li>변경되는 코드영역을 관리하는 코드 소유자로 부터 변경 코드가 적절하다는 승인을 받는다</li><li>누군가로 부터 가독성 승인을 받습니다</li></ul><h3 id="코드-리뷰의-이점"><a href="#코드-리뷰의-이점" class="headerlink" title="코드 리뷰의 이점"></a>코드 리뷰의 이점</h3><ul><li>코드가 정확한지 확인<ul><li>일반적으로 변경 작성자가 선택한 방식을 존중해 준다</li><li>정확성을 검사하는 유일한 수단이 아니라서 완벽까진 필요없다</li></ul></li><li>변경된 코드를 다른 엔지니어도 잘 이해(코드 이해 용의성)<ul><li>변경을 살펴 볼수 있는 첫번째 기회</li></ul></li><li>코드 베이스가 일관됨(코드 일관성)<ul><li>너무 복잡해지면 안됨</li><li>해당 프로그래밍 언어의 모범 사례들을 잘 따라야 된다</li><li>구글 코드 리포지토리에서 같은 언어로 작성된 다른 코드와 일관성을 유지해야 한다</li><li>필요 이상 복잡하지 않아야 된다</li></ul></li><li>팀이 소유권을 더 강하게 느낍(심리적, 문화적이점)</li><li>지식이 공유</li><li>코드 리뷰 자체의 기록이 남음</li></ul><h3 id="코드-리뷰-모범-사례"><a href="#코드-리뷰-모범-사례" class="headerlink" title="코드 리뷰 모범 사례"></a>코드 리뷰 모범 사례</h3><ul><li>공손하고 전문가 답게</li><li>작게 변경하기</li><li>변경 설명 잘쓰기</li><li>리뷰어는 최소환으로</li><li>가능한 한 자동화하기</li></ul><h3 id="코드-리뷰-유형"><a href="#코드-리뷰-유형" class="headerlink" title="코드 리뷰 유형"></a>코드 리뷰 유형</h3><ul><li>그린필드 코드리뷰<ul><li>새로운 코드를 추가할 때</li></ul></li><li>동작변경 개선 최적화</li><li>버그 수정과 롤백</li><li>리팩터링과 대규모 변경</li></ul><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.yes24.com/Product/Goods/109182479">구글 엔지니어는 이렇게 일한다</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/06/2024-06-10-Software_Engineering_at_Google_CHAPTER_9/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CHAPTER 8 스타일 가이드와 규칙</title>
      <link>https://sejoung.github.io/2024/06/2024-06-05-Software_Engineering_at_Google_CHAPTER_8/</link>
      <guid>https://sejoung.github.io/2024/06/2024-06-05-Software_Engineering_at_Google_CHAPTER_8/</guid>
      <pubDate>Wed, 05 Jun 2024 07:32:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Part-III-프로세스&quot;&gt;&lt;a href=&quot;#Part-III-프로세스&quot; class=&quot;headerlink&quot; title=&quot;Part III 프로세스&quot;&gt;&lt;/a&gt;Part III 프로세스&lt;/h1&gt;&lt;h2 id=&quot;CHAPTER-8-스타일-가이드와-규칙
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="Part-III-프로세스"><a href="#Part-III-프로세스" class="headerlink" title="Part III 프로세스"></a>Part III 프로세스</h1><h2 id="CHAPTER-8-스타일-가이드와-규칙"><a href="#CHAPTER-8-스타일-가이드와-규칙" class="headerlink" title="CHAPTER 8 스타일 가이드와 규칙"></a>CHAPTER 8 스타일 가이드와 규칙</h2><p>조직 내부 코드베이스를 관리하는 규직은 어디든 존재한다<br>규칙은 법이다.</p><p>지침은 권장사항과 모법사례를 이야기함<br>따르는 편이 이득이라 어지간하면 따르라고 권한다</p><p>코드의 지속 가능성을 높이도록 이끄는것</p><h3 id="규칙이-필요한-이유"><a href="#규칙이-필요한-이유" class="headerlink" title="규칙이 필요한 이유"></a>규칙이 필요한 이유</h3><p>좋은 행동을 장례하고 나쁜 행동을 억제하기 위함<br>조직에 따라 좋고 나쁨은 틀릴수 있다</p><h3 id="규칙-만들기"><a href="#규칙-만들기" class="headerlink" title="규칙 만들기"></a>규칙 만들기</h3><p>규칙을 만들때 어떤 규칙이 필요하지? 가 아니라 어떤 목표가 필요하지로 잡근 하는게 좋다</p><h4 id="기본-원칙"><a href="#기본-원칙" class="headerlink" title="기본 원칙"></a>기본 원칙</h4><p>규칙을 만들때 염두해 두어야 하는 일</p><ul><li>규칙의 양을 최소화 한다</li><li>코드를 읽는 사람에게 맞춘다</li><li>일관되어야 한다</li><li>오류가 나기 쉽거나 예상치 못한 동작을 유발하는 구조를 피한다</li><li>꼭 필요하다면 실용성을 생각해 예외를 허용해라</li></ul><h4 id="스타일-가이드"><a href="#스타일-가이드" class="headerlink" title="스타일 가이드"></a>스타일 가이드</h4><ul><li>위험을 피하기 위한 규칙</li><li>모법 사례를 적용하기 위한 규칙</li><li>일관성을 보장하기 위한 규칙<ul><li>무엇을 선택했냐 보다 선택했다는 사실에 의의를 둠</li></ul></li></ul><h3 id="규칙-수정하기"><a href="#규칙-수정하기" class="headerlink" title="규칙 수정하기"></a>규칙 수정하기</h3><p>엔지니어들이 규칙을 우회하는데 애를 쓰고 있으면 그 규칙에 기대했던 트레이드오프를 재검토해야됨</p><h4 id="프로세스"><a href="#프로세스" class="headerlink" title="프로세스"></a>프로세스</h4><p>스타일 가이드 수정 프로세스는 해법을 중심으로 돌아간다<br>문제가 주어지면 현시점에서는 다른 결론에 도달할 수 있는지를 다시평가</p><h4 id="스타일-중재자"><a href="#스타일-중재자" class="headerlink" title="스타일 중재자"></a>스타일 중재자</h4><p>구글의 스타일 가이드들은 언어별로 소유자가 따로 있어서 최종 결정과 승인을 책임진다.</p><h4 id="예외"><a href="#예외" class="headerlink" title="예외"></a>예외</h4><p>스타일 가이드의 규칙은 법과 같지만 일부 규칙은 예외를 허용한다.<br>규칙을 따르기보다 예외를 인정하는 쪽이 이득이라고 판단될 때만 예외를 허용</p><h3 id="지침"><a href="#지침" class="headerlink" title="지침"></a>지침</h3><p>지침에는 복잡한 주제에 관한 길고 깊은 논의부터 권장하는 모범사례에 관한 짧고 집중적인 조언까지 다양하다</p><h3 id="규칙-적용하기"><a href="#규칙-적용하기" class="headerlink" title="규칙 적용하기"></a>규칙 적용하기</h3><p>규칙을 정해도 적용하지 않으면 의미가 없다</p><p>규칙을 강제하는 방법으로는 교육과 훈련을 통한 사회적인 방법과 도구를 이용한 기술적인 방법이 있다</p><ul><li>오류 검사기</li><li>코드 포멧터</li></ul><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.yes24.com/Product/Goods/109182479">구글 엔지니어는 이렇게 일한다</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/06/2024-06-05-Software_Engineering_at_Google_CHAPTER_8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>3 애자일</title>
      <link>https://sejoung.github.io/2024/06/2024-06-02-growing_up_together_CHAPTER_3/</link>
      <guid>https://sejoung.github.io/2024/06/2024-06-02-growing_up_together_CHAPTER_3/</guid>
      <pubDate>Sun, 02 Jun 2024 12:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;3-애자일&quot;&gt;&lt;a href=&quot;#3-애자일&quot; class=&quot;headerlink&quot; title=&quot;3 애자일&quot;&gt;&lt;/a&gt;3 애자일&lt;/h1&gt;&lt;p&gt;애자일은 불확실성이 높은 프로젝트에 더 적합하다&lt;/p&gt;
&lt;p&gt;협력과 학습이 애자일이 불확실성을 다루는 핵
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="3-애자일"><a href="#3-애자일" class="headerlink" title="3 애자일"></a>3 애자일</h1><p>애자일은 불확실성이 높은 프로젝트에 더 적합하다</p><p>협력과 학습이 애자일이 불확실성을 다루는 핵심적인 구동원리</p><h2 id="애자일의-씨앗"><a href="#애자일의-씨앗" class="headerlink" title="애자일의 씨앗"></a>애자일의 씨앗</h2><p>고객에게 매일 가치를 전하라</p><p>가치를 전하면 협력이 쉽다</p><h2 id="애자일-도입-성공-요인-분석"><a href="#애자일-도입-성공-요인-분석" class="headerlink" title="애자일 도입 성공 요인 분석"></a>애자일 도입 성공 요인 분석</h2><p>고객참여와 코드 공유</p><p>두려워도 중요하다면 시도해봐야 되지 않겠는가</p><p>성숙도가 낮다면 고객참여는 필수</p><p>성공하는 조직에는 항상 뛰어난 애자일 코치가 존재</p><h2 id="당신의-조직에-새-방법론이-먹히지-않는-이유"><a href="#당신의-조직에-새-방법론이-먹히지-않는-이유" class="headerlink" title="당신의 조직에 새 방법론이 먹히지 않는 이유"></a>당신의 조직에 새 방법론이 먹히지 않는 이유</h2><p>우리는 말할수 있는것보다 더많이 알고 있다</p><p>복잡한 분야일수록 어떤 특정 기법의 효과보다도 치료자 효과가 더 큰 영향을 미침</p><p>우리가 어떤 방법론을 쓰느냐는 문제보다도 누가 참여했는가가 훨씬 더 압도적으로 중요한 문제</p><h2 id="애자일을-애자일스럽게-도입하기"><a href="#애자일을-애자일스럽게-도입하기" class="headerlink" title="애자일을 애자일스럽게 도입하기"></a>애자일을 애자일스럽게 도입하기</h2><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.yes24.com/Product/Goods/67350256">함께 자라기</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/06/2024-06-02-growing_up_together_CHAPTER_3/#disqus_thread</comments>
    </item>
    
    <item>
      <title>2 함께</title>
      <link>https://sejoung.github.io/2024/05/2024-05-31-growing_up_together_CHAPTER_2/</link>
      <guid>https://sejoung.github.io/2024/05/2024-05-31-growing_up_together_CHAPTER_2/</guid>
      <pubDate>Thu, 30 May 2024 21:50:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;2-함께&quot;&gt;&lt;a href=&quot;#2-함께&quot; class=&quot;headerlink&quot; title=&quot;2 함께&quot;&gt;&lt;/a&gt;2 함께&lt;/h1&gt;&lt;p&gt;협력, 일을 잘 나눌수 있을때는 프로젝트 끝날때다&lt;/p&gt;
&lt;h2 id=&quot;소프트웨어-관리자의-개선-우선순위&quot;&gt;&lt;a
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="2-함께"><a href="#2-함께" class="headerlink" title="2 함께"></a>2 함께</h1><p>협력, 일을 잘 나눌수 있을때는 프로젝트 끝날때다</p><h2 id="소프트웨어-관리자의-개선-우선순위"><a href="#소프트웨어-관리자의-개선-우선순위" class="headerlink" title="소프트웨어 관리자의 개선 우선순위"></a>소프트웨어 관리자의 개선 우선순위</h2><p>조엘 테스트 -&gt; 간단하다 -&gt; 문제는 맥락을 이해하지 못한사람이 12개 질문만으로 평가</p><ul><li>모든 항목에 예라고 답하는 것이 무조건 더 낫다고 보기 힘들다<br>조엘테스트 8번은 독립된 공간을 가져야된다 -&gt; 피플웨어라는 책에서는 그룹차원의 몰입이 가능 팀원들이 상시 대면 소통할수 있는 공간에서 생산성 향상이 된다고 함<br>-&gt; 서로 같은 목표로 일하는 팀이 만드는 소음은 그들사이에 더이상 소음이 아니다</li><li>12가지 질문이 개발팀 평가에서 정말 중요한 요소인가?<ul><li>제럴드 와인버그<ul><li>복잡한 상황을 이해하는 능력</li><li>관찰하는 능력</li><li>행동하는 능력</li></ul></li><li>품질소프트웨어관리<ul><li>시스템적 사고</li><li>일차적 측정</li><li>일차적 행동</li><li>변화를 기대하기</li></ul></li><li>프로젝트에 영향을 미친 요소<ul><li>관리 -&gt; 시스템 -&gt; 사람 -&gt; 도구</li></ul></li></ul></li></ul><h2 id="협력을-통한-추상화"><a href="#협력을-통한-추상화" class="headerlink" title="협력을 통한 추상화"></a>협력을 통한 추상화</h2><ul><li>커뮤니케이션과 협력<ul><li>실력이 뛰어난 프로그래머는 커뮤니케이션과 협력에 더 오랜 시</li></ul></li><li>백지장도 맞들면 찢어진다<ul><li>협력을 통하면 퍼포먼스가 더 떨러진다고 생각함</li></ul></li><li>톱니바퀴 실험<ul><li>패러티 법칙</li><li>혼자 작업한 사람보다 같이 작업한 사람들이 패러티법칙을 더 잘 찾음</li></ul></li><li>추상화의 중요성<ul><li>추상화를 높일수 있는 방법은 협력이다</li></ul></li><li>대화 하는 프로그래밍<ul><li>xp는 작업하면서 프로그래밍 각단계에 대해 이야기한다</li></ul></li></ul><h2 id="신뢰를-깎는-공유인가-신뢰를-쌓는-공유인가"><a href="#신뢰를-깎는-공유인가-신뢰를-쌓는-공유인가" class="headerlink" title="신뢰를 깎는 공유인가 신뢰를 쌓는 공유인가"></a>신뢰를 깎는 공유인가 신뢰를 쌓는 공유인가</h2><p>신뢰 자산이 높은 조직은 커뮤니케이션 효율이나 생산성이 높다</p><p>신뢰를 쌓는 방법</p><ul><li><p>투명성</p></li><li><p>공유</p></li><li><p>인터렉션</p></li><li><p>공유 조건 별 신뢰도 변화 실험</p><ul><li>모두 공유후에 신뢰도가 떨어짐<ul><li>각자 디자인하고 그걸 모두 공유한 경우</li></ul></li><li>하나 공유 -2.11</li><li>복수 공유 0.89</li><li>최고 공유 -1.75</li></ul></li><li><p>복수 공유는 신뢰도가 높아지고 성과도 더 좋았다</p></li></ul><h2 id="객관성의-주관성"><a href="#객관성의-주관성" class="headerlink" title="객관성의 주관성"></a>객관성의 주관성</h2><p>팀장의 자라에 앉으면 새로운 아이디어 전파가 쉬울거라고 생각하는 것은 환상<br>상대방에 대해 얼마나 이해하고 있나? 얼마나 대화를 해봤나?</p><ul><li>품질은 상대적이다<ul><li>품질이란 누군가에게 가치가 되는것 이다</li><li>품질 관련 일을 하는 사람들은 인간에 대한 이해가 필수적이다</li><li>객관적 데이터가 전부가 아니다</li></ul></li><li>감정을 배제할수 없다<ul><li>의사결정을 하는 과정에 감정적이고 직관적인부분이 큰역활을 하고 있으며 그런 감정적 부분이 배제된다면 의사결정을 제대로 할수 없다</li></ul></li></ul><h2 id="이것도-모르세요"><a href="#이것도-모르세요" class="headerlink" title="이것도 모르세요?"></a>이것도 모르세요?</h2><ul><li>공감하고 이해하려는 대화</li><li>행동을 유도하는 대화<h2 id="하향식-접근의-함정"><a href="#하향식-접근의-함정" class="headerlink" title="하향식 접근의 함정"></a>하향식 접근의 함정</h2>전문가는 언제나 탑다운으로 깔끔하게 생각할거다 -&gt; 미신</li></ul><p>탑다운 -&gt; 깔끔해보임<br>바텀업 -&gt; 탐색적인 성격이 강함</p><p>뛰어난 전문가 일수록 바텀업과 탑다운을 섞어 쓴다</p><ul><li>빠르고 빈번한 바통 터치가 가능한 전문가 조직<ul><li>오버해드를 낮출려면 협력 모델이 바통 터치 모형에 기반하지 않고 삼투압 모형에 기반해야 한다</li><li>삼투압적 의사소통</li></ul></li></ul><h2 id="전문가팀이-실패하는-이유"><a href="#전문가팀이-실패하는-이유" class="headerlink" title="전문가팀이 실패하는 이유"></a>전문가팀이 실패하는 이유</h2><p>전문가팀이라도 협력하지 않으면 성과가 훨씬 나쁘다</p><ul><li>전문가들 모아서 팀 만든다고 잘하는 것 아님</li><li>오히려 성과가 떨어질수도 있음</li><li>정보 공유하고 협력을 잘하기 위한 명시적인 도움이 필요</li><li>소셜 스킬등이 뛰어난 제너럴리스트가 있으면 도움이된다</li></ul><h2 id="구글이-밝힌-탁월한-팀의-비밀"><a href="#구글이-밝힌-탁월한-팀의-비밀" class="headerlink" title="구글이 밝힌 탁월한 팀의 비밀"></a>구글이 밝힌 탁월한 팀의 비밀</h2><ul><li>심리적 안정감</li><li>팀원들이 서로 어떻게 상호작용하고 자신의 일을 어떻게 바라보는지 중요함</li><li>팀토론등 특별히 고안된 활동을 통해 심리적 안정감을 높일수 있다</li></ul><h2 id="쾌속-학습팀"><a href="#쾌속-학습팀" class="headerlink" title="쾌속 학습팀"></a>쾌속 학습팀</h2><ul><li>패러다임 전환, 죽느냐 사느냐<ul><li>개발자에겐 학습, 빠른 학습이 중요하다</li></ul></li><li>최소 침습 심장 수술<ul><li>수술시간의 감소가 시간이 지나면 되는데 팀마다 천차만별</li></ul></li><li>학습속도랑 상관 없는것<ul><li>무엇이 학습 속도를 결정할까?</li></ul></li><li>리더가 팀 학습 속도에 미치는 영향<ul><li>독재자가 아닌 파트너가 될 수 있는 능력이 핵심</li></ul></li><li>학습 환경의 차이<ul><li>속도가 빠른 팀은 기술적 도전이라기 보다 팀에 대한 도전으로 생각했고 함께 일하는 새로운 방법을 만들어야 된다고 생각함</li></ul></li><li>진정한 학습은 실행속에서 이루어 지고 진정한 실행은 학습을 수반한다</li></ul><h2 id="프로젝트-확률론"><a href="#프로젝트-확률론" class="headerlink" title="프로젝트 확률론"></a>프로젝트 확률론</h2><ul><li>어디에다 돈을 걸 것인가?</li><li>직관의 허점<ul><li>인지적 편향</li></ul></li><li>이번 프로젝트는 제때에 끝낼 수 있을 것 같았는데<ul><li>각자의 확률이 90%라고 생각함</li></ul></li><li>애자일 확률론<ul><li>관심사의 섞임</li><li>프렉탈 구조처럼 부분속에 전체가 있는것</li><li>애자일은 좋은일에 대해서 그리고 확률을 또는 확률로 바꿈</li><li>애자일은 나쁜일에 대해서 또는 확률을 그리고 확률로 바꿈</li></ul></li></ul><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.yes24.com/Product/Goods/67350256">함께 자라기</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/05/2024-05-31-growing_up_together_CHAPTER_2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CHAPTER 7 엔지니어링 생산성 측정하기</title>
      <link>https://sejoung.github.io/2024/05/2024-05-30-Software_Engineering_at_Google_CHAPTER_7/</link>
      <guid>https://sejoung.github.io/2024/05/2024-05-30-Software_Engineering_at_Google_CHAPTER_7/</guid>
      <pubDate>Thu, 30 May 2024 01:30:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Part-II-문화&quot;&gt;&lt;a href=&quot;#Part-II-문화&quot; class=&quot;headerlink&quot; title=&quot;Part II 문화&quot;&gt;&lt;/a&gt;Part II 문화&lt;/h1&gt;&lt;h2 id=&quot;CHAPTER-7-엔지니어링-생산성-측정하기&quot;&gt;&lt;a href
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="Part-II-문화"><a href="#Part-II-문화" class="headerlink" title="Part II 문화"></a>Part II 문화</h1><h2 id="CHAPTER-7-엔지니어링-생산성-측정하기"><a href="#CHAPTER-7-엔지니어링-생산성-측정하기" class="headerlink" title="CHAPTER 7 엔지니어링 생산성 측정하기"></a>CHAPTER 7 엔지니어링 생산성 측정하기</h2><p>구들은 데이터를 토대로 결정하는 데이터 주도 회사 이다.<br>제품과 설계에 관한 결정 대부분을 근거 데이터와 함께 백업해놓는다</p><h3 id="엔지니어링-생산성을-측정하는-이유"><a href="#엔지니어링-생산성을-측정하는-이유" class="headerlink" title="엔지니어링 생산성을 측정하는 이유"></a>엔지니어링 생산성을 측정하는 이유</h3><p>사업을 확장하려면 충원을 피할수 없는데 그에 따른 소통 비용이 너무 가파르게 늘어난다</p><p>사업확장문제를 다르게 풀어볼수 있다 -&gt; 개개인의 생산성을 </p><h3 id="선별-측정할-가치가-있는가"><a href="#선별-측정할-가치가-있는가" class="headerlink" title="선별: 측정할 가치가 있는가?"></a>선별: 측정할 가치가 있는가?</h3><p>생산성 측정을 해도 될지 결정하는 질문 목록</p><ul><li>어떤 결과를 기대하고, 왜 그런가?</li><li>데이터가 기대한 결과를 뒷받침한다면 어떤 조치를 취하겠는가?</li><li>부정적인 결과가 나온다면 적절한 조취를 취할 것인가?</li><li>결과에 따른 조치는 누가 결정하고 언제 수행하는가?</li><li>당장 프로세스&#x2F;도구를 변경할 여유가 없다</li><li>어떤 결과가 나오든 곧 다른 요인에 의해 의미가 없어질 것이다</li><li>측정 결과를 이미 확정된 계획을 뒷받침하는 용도로만 쓴다</li><li>측정할 수 있는 지표들이 문제를 평가하기에 충분히 정확하지 않으며, 다른 요인들 때문에 혼탁해질 우려가 크다</li></ul><h3 id="GSM-프레임워크-목표와-신호를-뒷받침하는-의미-있는-지표-선정하기"><a href="#GSM-프레임워크-목표와-신호를-뒷받침하는-의미-있는-지표-선정하기" class="headerlink" title="GSM 프레임워크: 목표와 신호를 뒷받침하는 의미 있는 지표 선정하기"></a>GSM 프레임워크: 목표와 신호를 뒷받침하는 의미 있는 지표 선정하기</h3><ul><li>목표(goal) : 측정자가 원하는 최종 결과</li><li>신호(signal) : 원하는 최종 결과를 이루었는지 판단하는 방법</li><li>지표(metric) : 신호를 대변</li></ul><p>중요한건 추적 가능성을 잃지 않는것</p><h3 id="목표-goal"><a href="#목표-goal" class="headerlink" title="목표(goal)"></a>목표(goal)</h3><p>속성을 설명하되 어떠한 지표도 명시해서는 안된다<br>목표는 측정이 불가능하다</p><p>대부분 팀은 중요한 트레이드오프를 잊은 채 측정을 하곤한다</p><p>특정 요소를 개선하느라 실수로 다른 요소를 희생하는 일을 막는 요소 퀀즈(QUANTS)</p><ul><li>코드 품질</li><li>엔지니어들의 몰입도</li><li>지적 복잡성</li><li>박자와 속도</li><li>만족도</li></ul><h3 id="신호-signal"><a href="#신호-signal" class="headerlink" title="신호(signal)"></a>신호(signal)</h3><p>신호는 목표 달성 여부를 알 수 있는 방법</p><h3 id="지표-metric"><a href="#지표-metric" class="headerlink" title="지표(metric)"></a>지표(metric)</h3><p>지표는 측정하는 방법의 최종형태</p><h3 id="데이터로-지표-검증하기"><a href="#데이터로-지표-검증하기" class="headerlink" title="데이터로 지표 검증하기"></a>데이터로 지표 검증하기</h3><p>경험 표집법(ESM)</p><p>정량적 지표가 유용한 이유는 우리에게 힘과 확장성을 주기때문</p><p>정성적 지표도 지표이다 정성적 지표가 나타내는 결과가 정량적 지표와 일치해야 한다</p><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.yes24.com/Product/Goods/109182479">구글 엔지니어는 이렇게 일한다</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/05/2024-05-30-Software_Engineering_at_Google_CHAPTER_7/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CHAPTER 6 성장하는 조직 이끌기</title>
      <link>https://sejoung.github.io/2024/05/2024-05-29-Software_Engineering_at_Google_CHAPTER_6/</link>
      <guid>https://sejoung.github.io/2024/05/2024-05-29-Software_Engineering_at_Google_CHAPTER_6/</guid>
      <pubDate>Wed, 29 May 2024 02:20:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Part-II-문화&quot;&gt;&lt;a href=&quot;#Part-II-문화&quot; class=&quot;headerlink&quot; title=&quot;Part II 문화&quot;&gt;&lt;/a&gt;Part II 문화&lt;/h1&gt;&lt;h2 id=&quot;CHAPTER-6-성장하는-조직-이끌기&quot;&gt;&lt;a href=&quot;#
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="Part-II-문화"><a href="#Part-II-문화" class="headerlink" title="Part II 문화"></a>Part II 문화</h1><h2 id="CHAPTER-6-성장하는-조직-이끌기"><a href="#CHAPTER-6-성장하는-조직-이끌기" class="headerlink" title="CHAPTER 6 성장하는 조직 이끌기"></a>CHAPTER 6 성장하는 조직 이끌기</h2><p>팀하나를 이끌게 되었다면 다음 순서로는 연관된 여러 팀을 이끄는게 자연스러운 흐름</p><p>역활이 커져도 기존의 모범사례들은 계속 유효하다</p><ul><li>섬기는 리더</li><li>3A 리더쉽</li></ul><h3 id="늘-결정하라-Always-Be-Deciding"><a href="#늘-결정하라-Always-Be-Deciding" class="headerlink" title="늘 결정하라(Always Be Deciding)"></a>늘 결정하라(Always Be Deciding)</h3><p>기존 보다 높은 수준에서 더 많은 걸 결정해야 한다는 뜻</p><p>여러 전략 사이의 트레이드오프들을 정확히 찾아 내는것</p><p>트레이드오프는 사람의 행동에도 적용된다</p><p>문제를 뜯어 보고 통제 할수 있는 상태가 되어야 한다</p><ul><li>눈가리개 찾기</li><li>핵심 트레이드 오프 파악하기</li><li>결정하고 반복하기</li></ul><h3 id="늘-떠나라-Always-Be-Leaving"><a href="#늘-떠나라-Always-Be-Leaving" class="headerlink" title="늘 떠나라(Always Be Leaving)"></a>늘 떠나라(Always Be Leaving)</h3><p>조직에 리더가 없어도 스스로 문제를 풀 수 있게 유도해야 한다</p><p>리더스스로 SPOF 단일 장애지점 되는것은 안티패턴이다</p><ul><li>미션 자율주행 팀을 만들어라<ul><li>긍정적이고 자기-영속적인 문화를 갖춰야 한다</li></ul></li><li>문제 공간 분활하기</li><li>하위 문제를 다른 리더에게 위임하기<ul><li>무언가를 제대로 하고 싶다면 스스로 하라</li></ul></li><li>조율하고 반복하기<ul><li>관촬과 경청 95% &#x2F; 개입 5%</li></ul></li></ul><h3 id="늘-확장하라-Always-Be-Scaling"><a href="#늘-확장하라-Always-Be-Scaling" class="headerlink" title="늘 확장하라(Always Be Scaling)"></a>늘 확장하라(Always Be Scaling)</h3><p>성공 사이클</p><ul><li>분석</li><li>분투</li><li>견인</li><li>보상</li></ul><p>중요한일 vs 급한일</p><ul><li>리더가 되면 능동형 일보다 반응형 일의 비중이 커진다</li><li>급한일에 몰두 하려면?<ul><li>위임하자</li><li>따로 정지적으로 시간을 내자</li><li>나에게 효과가 있는 추적 시스템을 마련하자</li></ul></li></ul><p>공 떨어뜨리기</p><ul><li>어차피 공 몇 개는 떨어뜨릴 수 밖에 없다면 실수 보다는 의도적으로 떨어뜨리는게 낫지 않을까? 그럼 어느정도 통제력을 유지할수 있으니깐</li><li>몇번 떨어뜨리면 60%는 중간에 다른사람이 가지고 간다</li><li>진짜 중요한 업무면 위로 올라온다</li></ul><p>에너지 관리하기</p><ul><li>진짜 휴가 떠나기</li><li>일과 쉽게 단절하기</li><li>진짜 주말 보내기</li><li>매일매일 휴식하기</li><li>스스로에게 정신 건갈의 날을 가질 수 있는 권한 부여하기</li></ul><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.yes24.com/Product/Goods/109182479">구글 엔지니어는 이렇게 일한다</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/05/2024-05-29-Software_Engineering_at_Google_CHAPTER_6/#disqus_thread</comments>
    </item>
    
    <item>
      <title>1 자라기</title>
      <link>https://sejoung.github.io/2024/05/2024-05-28-growing_up_together_CHAPTER_1/</link>
      <guid>https://sejoung.github.io/2024/05/2024-05-28-growing_up_together_CHAPTER_1/</guid>
      <pubDate>Tue, 28 May 2024 12:21:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;1-자라기&quot;&gt;&lt;a href=&quot;#1-자라기&quot; class=&quot;headerlink&quot; title=&quot;1 자라기&quot;&gt;&lt;/a&gt;1 자라기&lt;/h1&gt;&lt;p&gt;자라기는 학습을 말한다&lt;/p&gt;
&lt;p&gt;규칙을 지키고 -&amp;gt; 규칙을 깨고 -&amp;gt; 규칙을 넘어선다&lt;/p
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="1-자라기"><a href="#1-자라기" class="headerlink" title="1 자라기"></a>1 자라기</h1><p>자라기는 학습을 말한다</p><p>규칙을 지키고 -&gt; 규칙을 깨고 -&gt; 규칙을 넘어선다</p><h2 id="당신은-몇-년-차"><a href="#당신은-몇-년-차" class="headerlink" title="당신은 몇 년 차?"></a>당신은 몇 년 차?</h2><p>경력 그 견딜 수 없는 무거움</p><p>소프트웨어 기술자 등급에서 경험이라는 요소가 가장 결정적 역활을 한다</p><p>직원을 뽑을 때 무엇이 그사람의 실력을 가장 잘 예측할까?</p><ul><li>경력과 연차의 상관성 0.18</li><li>학력의 상관성 0.10</li><li>작업 샘플 테스트 0.54</li><li>지능테스트 0.51</li><li>구조화된 인터뷰 0.51</li><li>성실성이나 꼼꼼함 같은 성격 테스트 0.41 or 0.31</li><li>레퍼런스 체크 0.26</li></ul><p>경력과 연차는 실력을 예측하는데 도움이 되지 않는다</p><p>퍼포먼스 수준으로 접근하면 10년차 개발자가 2년인 개발자보다 더 우수하지 않다</p><p>요즘 얼마나 공부 하고 수련하느냐로 내 직무 성과가 결정된다</p><p>1만 시간의 법칙 : 의도적 수련</p><ul><li>피드백을 짧은 주기로 받을것</li></ul><h2 id="자기계발은-복리로-돌아온다"><a href="#자기계발은-복리로-돌아온다" class="headerlink" title="자기계발은 복리로 돌아온다"></a>자기계발은 복리로 돌아온다</h2><p>현재 나에게 투자했느냐가 1년 혹은 2년 후의 나를 결정한다</p><p>지식이나 능력은 복리로 이자가 붙는다</p><p>매일 내가 더 나은 내가 되어 간다</p><p>부분의 합보다 전체가 더 크다</p><p>어떻게 하면 더하기 보다 곱하기를 할껀가?</p><ul><li>자신이 이미 갖고 있는 것들을 잘 활용하라</li><li>외부 물질을 체화하라</li><li>자신을 개선하는 프로세스에 대해 생각해 보라</li><li>피드백을 자주 받아라</li><li>자신의 능력을 높여주는 도구와 환경을 점진적으로 만들어라</li></ul><h2 id="학습-프레임과-실행-프레임"><a href="#학습-프레임과-실행-프레임" class="headerlink" title="학습 프레임과 실행 프레임"></a>학습 프레임과 실행 프레임</h2><p>학습 프레임 : 새로운 것을 배우는 것 (자라기)<br>실행 프레임 : 배운 것을 실행하는 것 (잘하기)</p><p>실행 프레임은 목표가 학습을 통한 성장이라면 불리한 선택</p><h2 id="가장-학습하기-힘든-직업이-살아남는다"><a href="#가장-학습하기-힘든-직업이-살아남는다" class="headerlink" title="가장 학습하기 힘든 직업이 살아남는다"></a>가장 학습하기 힘든 직업이 살아남는다</h2><p>학습에 유리한 조건 불리한 조건</p><ul><li>인공지능 시대에 대비하려면 배우기 힘든 것에 집중하라</li><li>학습하기 힘든 환경에서 학습하기 힘든 주제들을 골라야 하는 상황</li></ul><p>컴퓨터화에 병목이 되는 카테고리</p><ul><li>지각과 조작</li><li>창의적 지능</li><li>사회적 지능</li></ul><p>암묵지와 직관을 배우고 수련하는 방법을 배우자</p><h2 id="달인이-되는-비결"><a href="#달인이-되는-비결" class="headerlink" title="달인이 되는 비결"></a>달인이 되는 비결</h2><p>전문가가 못된 이유</p><ul><li>동기가 부족</li><li>피드백을 제대로 받지 못한다</li></ul><h2 id="수십-년-동안-전문가가-안-되는-비결"><a href="#수십-년-동안-전문가가-안-되는-비결" class="headerlink" title="수십 년 동안 전문가가 안 되는 비결"></a>수십 년 동안 전문가가 안 되는 비결</h2><p>전문성 형성에서 타당성과 피드백의 중요성</p><ul><li>타당성이 필요하다는 의미는 인과관계와 규칙성이 존재해야 한다</li><li>피드백은 자신이 내린 직관적인 결정을 빠르게 피드백 받아서 학습할수 있어야 한다</li></ul><h2 id="당신이-제자리걸음인-이유"><a href="#당신이-제자리걸음인-이유" class="headerlink" title="당신이 제자리걸음인 이유"></a>당신이 제자리걸음인 이유</h2><p>실력을 높이기 위해 의도적 수련이 중요하다</p><p>의도적 수련의 필수조건</p><ul><li>적절한 난이도</li></ul><p>자신이 업무 시간 중에 불안함이나 지루함을 느끼는 때가 대부분이면 실력이 도무지 늘지 않는 환경에 있다</p><p>지루함을 느끼는 경우 </p><ul><li>실력 낮추기</li><li>난이도 높이기</li></ul><p>불안감을 느끼는 경우</p><ul><li>실력 높이기</li><li>난이도 낮추기</li></ul><p>동적인 균형</p><ul><li>지속적으로 자신의 감정 상태를 살펴서 전략을 적절히 사용해야 된다</li></ul><h2 id="프로그래밍-언어-배우기의-달인"><a href="#프로그래밍-언어-배우기의-달인" class="headerlink" title="프로그래밍 언어 배우기의 달인"></a>프로그래밍 언어 배우기의 달인</h2><ul><li>튜토리얼을 읽을 때 뭘 만들지 생각하고 읽기 - 적극적 읽기</li><li>공부할때 표준 라이브러리 소스코드를 읽는다</li><li>공부중 다른 사람의 코드에 내가 필요한 기능을 추가한다</li></ul><p>전문가가 구체적인 사건에 대해 말하도록 유도하는것</p><h2 id="실수는-예방하는-것이-아니라-관리하는-것이다"><a href="#실수는-예방하는-것이-아니라-관리하는-것이다" class="headerlink" title="실수는 예방하는 것이 아니라 관리하는 것이다"></a>실수는 예방하는 것이 아니라 관리하는 것이다</h2><p>실수 예방과 실수 관리</p><ul><li>실수 예방 : 실수 한 사람을 비난하고 처벌하고 따라서 실수를 감추고 그에 대해 논의하기 꺼리는 문화</li><li>실수 관리 : 실수를 공개하고 그에 대해 논의하고 그로부터 배우는 문화</li></ul><h2 id="뛰어난-선생에-대한-미신"><a href="#뛰어난-선생에-대한-미신" class="headerlink" title="뛰어난 선생에 대한 미신"></a>뛰어난 선생에 대한 미신</h2><p>전문가가 가르쳐 주는게 전부가 아니다</p><p>인지적 작업 분석</p><h2 id="나홀로-전문가에-대한-미신"><a href="#나홀로-전문가에-대한-미신" class="headerlink" title="나홀로 전문가에 대한 미신"></a>나홀로 전문가에 대한 미신</h2><p>사회적 자본과 기술<br>신뢰는 사회적 자본</p><p>고독한 전문가라는 미신</p><p>뛰어난 소프트웨어 개발자일수록 타인과 인터랙션에 더 많은 시간을 쓴다</p><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.yes24.com/Product/Goods/67350256">함께 자라기</a></li><li><a href="https://www.kseis.co.kr/bbs/data/dataDetail.do?bbs_seq=374839457701">2024년도 적용 소프트웨어기술자 노임단가</a></li><li><a href="http://www.pjob.co.kr/site/data_pop_level.aspx">소프트웨어 기술자 등급표</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/05/2024-05-28-growing_up_together_CHAPTER_1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CHAPTER 5 팀 이끌기</title>
      <link>https://sejoung.github.io/2024/05/2024-05-24-Software_Engineering_at_Google_CHAPTER_5/</link>
      <guid>https://sejoung.github.io/2024/05/2024-05-24-Software_Engineering_at_Google_CHAPTER_5/</guid>
      <pubDate>Fri, 24 May 2024 02:20:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Part-II-문화&quot;&gt;&lt;a href=&quot;#Part-II-문화&quot; class=&quot;headerlink&quot; title=&quot;Part II 문화&quot;&gt;&lt;/a&gt;Part II 문화&lt;/h1&gt;&lt;h2 id=&quot;CHAPTER-5-팀-이끌기&quot;&gt;&lt;a href=&quot;#CHAPTE
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="Part-II-문화"><a href="#Part-II-문화" class="headerlink" title="Part II 문화"></a>Part II 문화</h1><h2 id="CHAPTER-5-팀-이끌기"><a href="#CHAPTER-5-팀-이끌기" class="headerlink" title="CHAPTER 5 팀 이끌기"></a>CHAPTER 5 팀 이끌기</h2><p>구글의 리더의 역활</p><ul><li>관리자 : 사람을 이끌고</li><li>테크리드 : 기술과 관련 책임을 진다</li></ul><h3 id="관리자와-테크-리드-혹은-둘-다"><a href="#관리자와-테크-리드-혹은-둘-다" class="headerlink" title="관리자와 테크 리드(혹은 둘 다)"></a>관리자와 테크 리드(혹은 둘 다)</h3><p>엔지니어링 관리지</p><ul><li>팀 구성원 모두의 성과, 생산성, 행복을 책임져야 한다</li><li>제품의 사업적 요구까지 충족시켜야함</li></ul><p>테크 리드</p><ul><li>팀의 기술적인 면, 기술과 관련한 결정과 선택, 아키텍처, 우선순위, 성능과 일반적인 프로젝트 관리를 책임 진다</li><li>개인 기여자이자 리더이다</li></ul><p>테크 리드 매니저</p><ul><li>주로 경력이 오래됀 사람에게 특히 최근까지 개인 기여자였던 사람에게 맡긴다</li></ul><h3 id="개인-기여자에서-리더로"><a href="#개인-기여자에서-리더로" class="headerlink" title="개인 기여자에서 리더로"></a>개인 기여자에서 리더로</h3><p>동기 부여가 확실하고 참을성이 부족한 유형이면 운전자가 될수도 있다</p><p>두려워해야 할 건 오직 전부다</p><ul><li>바나나를 재배하면서 사과를 세는 함정</li><li>피터의 법칙 : 직원들은 자신의 무능력이 드러나는 직급까지 승진</li></ul><p>경력 스펙트럼을 확장하는 길<br>사실은 천부적인 관리자일수도 있다</p><p>섬김에 리더쉽</p><h3 id="엔지니어링-관리자"><a href="#엔지니어링-관리자" class="headerlink" title="엔지니어링 관리자"></a>엔지니어링 관리자</h3><p>컴퓨팅 시대 전에는 관리와 노동은 거의 적대적인 역활</p><ul><li>관리자는 밥맛이야</li></ul><p>오늘날의 엔지니어링 관리자</p><ul><li>전통적인 관리자는 일을 어떻게 처리할지를 고민하는 반면 훌륭한 관리자는 무슨 일을 처리할지 고민한다</li></ul><p>팀원들이 안전하다고 느끼게 해주는 일 역시 팀을 촉진하는 좋은 방법</p><p>실패해도 괜찮지만 팀으로써 함께 실패하고 실패로부터 배워야 한다</p><p>겸손, 존중, 신뢰라는 원칙하에 행동하자</p><h3 id="안티패턴"><a href="#안티패턴" class="headerlink" title="안티패턴"></a>안티패턴</h3><p>만만한 사람고용하기</p><ul><li>나보다 더 똑똑한 사람을 고용하라</li></ul><p>저성과자 방치하기</p><ul><li>모든 치아를 공평하게 대해야 하지만 때로는 치과의사가 되야 된다</li><li>희망은 전략이 아니다</li></ul><p>사람문제 무시하기</p><ul><li>사람이라는 요인을 무시해서는 안 된다</li></ul><p>만인의 친구 되기</p><ul><li>부드럽게 끌어주는 리딩과 우정을 혼동하지 말자</li></ul><p>채용 기준 타협하기</p><ul><li>훌륭한 팀을 구축하자</li></ul><p>팀을 어린이처럼 대하기</p><ul><li>민들만한 사람을 뽑고 신뢰를 보여준다면 그들은 놀라운 일을 해낼 수 있다<h3 id="올바른-패턴"><a href="#올바른-패턴" class="headerlink" title="올바른 패턴"></a>올바른 패턴</h3>자존심 버리기</li><li>팀 리더에게 중요한 덕목</li><li>팀을 믿자</li></ul><p>마음 다스리기</p><ul><li>덜 회의 적인 태도를 취해도 좋다</li><li>리더는 항상 무대 위에 있다</li><li>리더의 역활은 사람들을 고무시키는 것</li><li>질문하기 가 마음을 다스리는데 좋다</li></ul><p>촉매자 되기</p><ul><li>합의를 이끄는 일</li></ul><p>장애물 치우기</p><ul><li>누가 해법을 가지고 있는지를 알고 있으면 가키가 크다</li></ul><p>선생이자 멘토 되기</p><ul><li>주니어 팀원 지켜보기</li></ul><p>명확한 목표 세우기</p><ul><li>팀이 이루어야 할 목표를 구체적인 문장으로 적어 놓는 것</li></ul><p>정직하기</p><ul><li>피드백은 칭찬 샌드위치 방식으로 충격을 완화하자</li></ul><p>행복한지 확인하기</p><ul><li>팀원들이 행복해하는지 확인해야 된다</li></ul><h3 id="예상-못한-질문"><a href="#예상-못한-질문" class="headerlink" title="예상 못한 질문"></a>예상 못한 질문</h3><p>막연한 목표를 구체적으로 명시해 두어야 한다</p><h3 id="그-외-조언과-요령"><a href="#그-외-조언과-요령" class="headerlink" title="그 외 조언과 요령"></a>그 외 조언과 요령</h3><ul><li>위임하되 곤란한 일은 직접 처리하자</li><li>여러분을 대신할 사람을 찾자</li><li>파도를 일으켜야할 타이밍을 알자</li><li>혼란으로부터 팀을 보호하자</li><li>팀에 공중 엄호를 해주자</li><li>팀이 잘하고 있다면 칭찬하자</li><li>실패해도 쉽게 되돌릴 수 있는 일에는 해보세요라고 말하자</li></ul><h3 id="사람은-식물과-같다"><a href="#사람은-식물과-같다" class="headerlink" title="사람은 식물과 같다"></a>사람은 식물과 같다</h3><p>방향지시<br>동기부여</p><p>내적 동기롸 외적동기</p><ul><li>내적동기 부여 방법<ul><li>자율성</li><li>숙련</li><li>목적</li></ul></li></ul><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.yes24.com/Product/Goods/109182479">구글 엔지니어는 이렇게 일한다</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/05/2024-05-24-Software_Engineering_at_Google_CHAPTER_5/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CHAPTER 4 공정 사회를 위한 엔지니어링</title>
      <link>https://sejoung.github.io/2024/05/2024-05-23-Software_Engineering_at_Google_CHAPTER_4/</link>
      <guid>https://sejoung.github.io/2024/05/2024-05-23-Software_Engineering_at_Google_CHAPTER_4/</guid>
      <pubDate>Thu, 23 May 2024 04:28:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Part-II-문화&quot;&gt;&lt;a href=&quot;#Part-II-문화&quot; class=&quot;headerlink&quot; title=&quot;Part II 문화&quot;&gt;&lt;/a&gt;Part II 문화&lt;/h1&gt;&lt;h2 id=&quot;CHAPTER-4-공정-사회를-위한-엔지니어링&quot;&gt;&lt;a hre
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="Part-II-문화"><a href="#Part-II-문화" class="headerlink" title="Part II 문화"></a>Part II 문화</h1><h2 id="CHAPTER-4-공정-사회를-위한-엔지니어링"><a href="#CHAPTER-4-공정-사회를-위한-엔지니어링" class="headerlink" title="CHAPTER 4 공정 사회를 위한 엔지니어링"></a>CHAPTER 4 공정 사회를 위한 엔지니어링</h2><p>프로그래밍은 당면한 문제에 집중하여 코드를 생산한다</p><p>우기가 얻은 깨우침을 다음 세대에 전하여 차세대 엔지니어들은 우리보다 나은 결정을 내리도록 이끄는 일이 중요하다고 생각</p><h3 id="편견은-피할-수-없다"><a href="#편견은-피할-수-없다" class="headerlink" title="편견은 피할 수 없다"></a>편견은 피할 수 없다</h3><p>무의식적인 편견은 교묘하여 의도적인 배척 행위보다 물리치기 어려울 때가 많다</p><p>엔지니어링 조직 자체의 인적 구성을 제품이 목표하는 시장의 인적 구성과 비슷해지도록 돕는것</p><h3 id="다양성이-필요한-이유-이해하기"><a href="#다양성이-필요한-이유-이해하기" class="headerlink" title="다양성이 필요한 이유 이해하기"></a>다양성이 필요한 이유 이해하기</h3><p>뛰어난 엔지니어가 되려면 제품 설계와 구현에 다양한 관점을 포용해야 한다고 믿는다</p><p>모두를 위한 제품을 만들려면 우리가 어떤 사람들을 대표하는지 이해해야 한다</p><h3 id="다문화-역량-갖추기"><a href="#다문화-역량-갖추기" class="headerlink" title="다문화 역량 갖추기"></a>다문화 역량 갖추기</h3><p>엔지니어가 되려면?</p><ul><li>적성에 맞아야 된다</li><li>만들어야 할때와 아닐 때를 구분하는 안목도 필요</li></ul><p>기술 회사는 직원들이 계속해서 전문가답게 개발을 이어가도록 해야 하고 여러 분야에 걸쳐 포용적인 개발이 되도록 돌봐야 한다</p><h3 id="다양성-실천하기"><a href="#다양성-실천하기" class="headerlink" title="다양성 실천하기"></a>다양성 실천하기</h3><p>제도가 잘못되었다면 우리가 책임져야 한다 특정 개인에게 떠넘기거나 못본척해 봐야 효과가 없으며, 무책임한 태도이다</p><h3 id="단일한-접근-방식-거부하기"><a href="#단일한-접근-방식-거부하기" class="headerlink" title="단일한 접근 방식 거부하기"></a>단일한 접근 방식 거부하기</h3><p>기술 분야의 불평등을 해소하는 데 단하나의 철학이나 방법론을 고집할 수는 없다</p><p>단일한 접근 방식에서 탈피해야 한다</p><p>가장 어렵고 가장 소외된 사용 사례를 최우선으로 살피자</p><h3 id="확립된-프로세스에-도전하기"><a href="#확립된-프로세스에-도전하기" class="headerlink" title="확립된 프로세스에 도전하기"></a>확립된 프로세스에 도전하기</h3><ul><li>기존의 평가가 향후 성과를 예측하는 척도인가?</li><li>성과 평가가 다음 관리자에게 편견을 주지 않을까?</li><li>성과 평가 점수가 회사 전체적으로 표준화 된것인가?</li></ul><h3 id="가치-vs-결과"><a href="#가치-vs-결과" class="headerlink" title="가치 vs 결과"></a>가치 vs 결과</h3><ul><li>자신을 솔찍하게 바라보고 성찰하자</li><li>모두를 위해 만들지 말자. 모두와 함께 만들자</li><li>제품을 이용하기 가장 어려운 이들을 위해 설계하자</li><li>가정하지 말고 시스템 전반의 공정성을 측정하자</li><li>변할 수 있다</li></ul><h3 id="관심을-잃지-말고-전진하자"><a href="#관심을-잃지-말고-전진하자" class="headerlink" title="관심을 잃지 말고 전진하자"></a>관심을 잃지 말고 전진하자</h3><p>편견과 차별 때문에 고통받는 사용자들에게 최우선으로 관심을 기울여야 한다</p><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.yes24.com/Product/Goods/109182479">구글 엔지니어는 이렇게 일한다</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/05/2024-05-23-Software_Engineering_at_Google_CHAPTER_4/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CHAPTER 3 지식 공유</title>
      <link>https://sejoung.github.io/2024/05/2024-05-22-Software_Engineering_at_Google_CHAPTER_3/</link>
      <guid>https://sejoung.github.io/2024/05/2024-05-22-Software_Engineering_at_Google_CHAPTER_3/</guid>
      <pubDate>Wed, 22 May 2024 01:19:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Part-II-문화&quot;&gt;&lt;a href=&quot;#Part-II-문화&quot; class=&quot;headerlink&quot; title=&quot;Part II 문화&quot;&gt;&lt;/a&gt;Part II 문화&lt;/h1&gt;&lt;h2 id=&quot;CHAPTER-3-지식-공유&quot;&gt;&lt;a href=&quot;#CHAPTE
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="Part-II-문화"><a href="#Part-II-문화" class="headerlink" title="Part II 문화"></a>Part II 문화</h1><h2 id="CHAPTER-3-지식-공유"><a href="#CHAPTER-3-지식-공유" class="headerlink" title="CHAPTER 3 지식 공유"></a>CHAPTER 3 지식 공유</h2><p>조직은 자신의 문제 대부분에 스스로 답할 수 있어야 한다</p><p>조직은 질문의 답을 아는 전문가들이 필요하고 그들의 지식을 전파할 메커니즘도 필요하다</p><p>조직에는 배움의 문화가 자리 잡혀 있어야 한다 -&gt; 사람들에게 모르는것을 인정할 수 있도록 돕는 심리적 안전을 제공해야 한다</p><h3 id="배움을-가로막는-장애물"><a href="#배움을-가로막는-장애물" class="headerlink" title="배움을 가로막는 장애물"></a>배움을 가로막는 장애물</h3><ul><li>심리적 안전 부족</li><li>정보 섬<ul><li>정보 파편화</li><li>정보 중복</li><li>정보 왜곡</li></ul></li><li>단일 장애점</li><li>전무 아니면 전무 전문성</li><li>앵무새처럼 융내내기</li><li>유령의 묘지</li></ul><h3 id="철학"><a href="#철학" class="headerlink" title="철학"></a>철학</h3><p>소프트웨어 엔지니어링?</p><ul><li>여러 버전의 프로그램을 여러 사람이 참여해 개발하는 일</li></ul><p>소프트웨어 엔지니어링에서 가장 중요</p><p>전문가가 일대일로 해주는 조언의 가치는 언제나 이루 말할 수 없이 크다<br>하지만 확장성이 부족하여 팀이 커지면 그리 유용하지 못하다</p><p>문서화된 지식은 팀을 넘어 조직 전체로 퍼뜨릴 수 있다</p><p>전문가에게는 다양한 지식을 종합할 수 있는 능력이 있다</p><h3 id="판-깔아주기-심리적-안전"><a href="#판-깔아주기-심리적-안전" class="headerlink" title="판 깔아주기: 심리적 안전"></a>판 깔아주기: 심리적 안전</h3><p>타인의 무지를 탓하지 말고 그 솔직함을 반겨야 된다</p><p>건강한 환경에서라면 사람들은 질문을 던지고, 틀리고, 새로운 지식을 얻는 걸 편안하게 생각해야 한다</p><ul><li>멘토제도<ul><li>멘토는 누글러에거 심리적 안전을 심어주는 효과적인 방법</li></ul></li><li>큰 그룹에서의 심리적 안전<ul><li>권장 패턴<ul><li>기초적인 질문과 실수를 올바른 방향으로 안내</li><li>질문자가 배우게끔 도와줄 목적으로 설명</li><li>상냥하게 인내심을 갖고 도움이 되게끔 대응</li><li>해법을 찾기 위한 공개 토론형식으로 상호작용이 이루어 진다</li></ul></li><li>안티패턴<ul><li>기초적인 질문과 실수를 비난</li><li>자신의 지식을 뽑낼 목적으로 설명</li><li>잘난 체하고 비난하며 건설적이지 못한 방식으로 대응</li><li>승자와 패자를 가리는 논쟁형식으로 상호작용이 이루어 진다</li></ul></li><li>거짓된 놀람 금지</li><li>음 실제로는 금지</li><li>뒷좌석 운전 금지</li><li>미묘한 ~주의 금지</li></ul></li></ul><h3 id="내-지식-키우기"><a href="#내-지식-키우기" class="headerlink" title="내 지식 키우기"></a>내 지식 키우기</h3><ul><li>질문하기<ul><li>공개적으로 묻고 모르면 모른다고 인정</li></ul></li><li>맥락 이해하기<ul><li>무언가를 옮기거나 바꾸려면 그게 왜 그자리에 있는지부터 이해하자 -&gt; 체스터슨의 울타리 원칙<h3 id="질문-확장하기-커뮤니티에-묻기"><a href="#질문-확장하기-커뮤니티에-묻기" class="headerlink" title="질문 확장하기: 커뮤니티에 묻기"></a>질문 확장하기: 커뮤니티에 묻기</h3></li></ul></li><li>그룹채팅</li><li>메일링 리스트</li><li>질의응답 플랫폼<h3 id="지식-확장하기-누구나-가르칠-게-있다"><a href="#지식-확장하기-누구나-가르칠-게-있다" class="headerlink" title="지식 확장하기: 누구나 가르칠 게 있다"></a>지식 확장하기: 누구나 가르칠 게 있다</h3></li><li>오피스 아워<ul><li>직접적인 대화가 쉽게 풀릴때도 있다</li></ul></li><li>기술 강연과 수업</li><li>문서자료<ul><li>문서자료 갱신하기</li><li>새로운 문서자료 작성하기</li><li>문서화 촉진하기</li></ul></li><li>코드<h3 id="조직의-지식-확장하기"><a href="#조직의-지식-확장하기" class="headerlink" title="조직의 지식 확장하기"></a>조직의 지식 확장하기</h3>지식 공유 문화 일구기</li><li>존중<ul><li>높은 수준의 기술 리더십을 요구하지만 모든 리더십이 기술 문제와 관련 된것은 아니다.</li></ul></li><li>보상과 인정</li></ul><p>표준 정보 소스 구축하기</p><ul><li>개발자 가이드</li><li>go&#x2F; 링크</li><li>코드랩</li><li>정적 분석</li></ul><p>소외되지 않기</p><ul><li><p>뉴스레터</p></li><li><p>커뮤니티</p><h3 id="가독성-제도-코드-리뷰를-통한-표준-멘토-제도"><a href="#가독성-제도-코드-리뷰를-통한-표준-멘토-제도" class="headerlink" title="가독성 제도: 코드 리뷰를 통한 표준 멘토 제도"></a>가독성 제도: 코드 리뷰를 통한 표준 멘토 제도</h3></li><li><p>가독성 인증 프로세스</p></li><li><p>가독성 인증 프로세스를 두는 이유</p><ul><li>코드는 작성되는 횟수보다 훨씬 많이 읽히며, 구글이 매우 큰 모노리포를 이용한다는 점을 감안하면 그 차이는 훨씬 커진다</li></ul></li></ul><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.yes24.com/Product/Goods/109182479">구글 엔지니어는 이렇게 일한다</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/05/2024-05-22-Software_Engineering_at_Google_CHAPTER_3/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CHAPTER 2 팀워크 이끌어내기</title>
      <link>https://sejoung.github.io/2024/05/2024-05-21-Software_Engineering_at_Google_CHAPTER_2/</link>
      <guid>https://sejoung.github.io/2024/05/2024-05-21-Software_Engineering_at_Google_CHAPTER_2/</guid>
      <pubDate>Tue, 21 May 2024 02:37:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Part-II-문화&quot;&gt;&lt;a href=&quot;#Part-II-문화&quot; class=&quot;headerlink&quot; title=&quot;Part II 문화&quot;&gt;&lt;/a&gt;Part II 문화&lt;/h1&gt;&lt;h2 id=&quot;CHAPTER-2-팀워크-이끌어내기&quot;&gt;&lt;a href=&quot;#CH
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="Part-II-문화"><a href="#Part-II-문화" class="headerlink" title="Part II 문화"></a>Part II 문화</h1><h2 id="CHAPTER-2-팀워크-이끌어내기"><a href="#CHAPTER-2-팀워크-이끌어내기" class="headerlink" title="CHAPTER 2 팀워크 이끌어내기"></a>CHAPTER 2 팀워크 이끌어내기</h2><p>반듯이 통제해야 하는 하나의 변수는 자기자신이다</p><p>사람은 간헐적 버그들의 집합</p><h3 id="내-코드를-숨기고-싶어요"><a href="#내-코드를-숨기고-싶어요" class="headerlink" title="내 코드를 숨기고 싶어요"></a>내 코드를 숨기고 싶어요</h3><p>불안감 때문에 코드를 숨기고 싶어 한다</p><h3 id="천재-신화"><a href="#천재-신화" class="headerlink" title="천재 신화"></a>천재 신화</h3><p>천재 신화의 진짜 업적은 사람들을 협업하도록 이끈것이다</p><h3 id="숨기는-건-해롭다"><a href="#숨기는-건-해롭다" class="headerlink" title="숨기는 건 해롭다"></a>숨기는 건 해롭다</h3><p>오롯이 홀로 일한다면 실패할 위험성을 불필요하게 키우고 자신의 성장 잠재력을 속이는 것</p><p>누군가에게 빠르게 보여주면 피드백을 빠르게 받을수 있다</p><p>공유는 조기감지의 기회를 준다<br>버스지수 : 몇 명의 팀원이 버스에 치어서 일을 할 수 없게 될 때 프로젝트가 망하게 되는지를 나타내는 지수</p><p>원점회기 : 문제를 발리 찾을수록 고치는 비용이 낮아 진다</p><p>결론은 숨기지 말자</p><p>홀로 일하기는 함께 일하기 보다 본질적으로 더 위험하다</p><h3 id="모든-건-팀에-달렸다"><a href="#모든-건-팀에-달렸다" class="headerlink" title="모든 건 팀에 달렸다"></a>모든 건 팀에 달렸다</h3><p>비전을 공유하세요. 역활을 나누세요. 다른 이로부터 배우세요</p><p>사회적 상호작용의 세 기둥</p><ul><li>겸손</li><li>존중</li><li>신뢰</li></ul><p>실천 하는 법</p><ul><li>자존심 버리기</li><li>비평하고 비평받는 법 배우기</li><li>빠르게 실패라고 반복하기</li></ul><p>비난 없는 포스트모템 문화</p><ul><li>사건의 개요</li><li>사건을 인지하고 해결에 이르기 까지의 타임라인</li><li>사건의 근본 원인</li><li>영향과 피해 평가</li><li>문제를 즉시 해결하기 위한 조치 항목(소유자 명시)</li><li>재발 방지를 위한 조치 항목</li><li>해당 경험에서 얻은 교훈</li></ul><p>인내심을 기르자<br>마음을 열고 받아 드리자</p><p>구글 답게 하기</p><ul><li>모호함을 뚫고 번창한다</li><li>피드백을 소중히 한다</li><li>저항을 극복한다</li><li>사용자를 우선한다</li><li>팀에 관심을 기울인다</li><li>옳은 일을 한다</li></ul><h1 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h1><hr><ul><li><a href="https://www.yes24.com/Product/Goods/109182479">구글 엔지니어는 이렇게 일한다</a></li></ul>]]></content:encoded>
      
      <comments>https://sejoung.github.io/2024/05/2024-05-21-Software_Engineering_at_Google_CHAPTER_2/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
